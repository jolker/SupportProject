/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package vn.nct.cardgame.profile.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TPromotion implements org.apache.thrift.TBase<TPromotion, TPromotion._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TPromotion");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField USERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("username", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TRANSACTION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("transactionType", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I16, (short)5);
  private static final org.apache.thrift.protocol.TField PROMOTION_FIELD_DESC = new org.apache.thrift.protocol.TField("promotion", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("start_date", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("end_date", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DATE_CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("date_created", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField DATE_UPDATED_FIELD_DESC = new org.apache.thrift.protocol.TField("date_updated", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TPromotionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TPromotionTupleSchemeFactory());
  }

  public int id; // required
  public int userId; // required
  public String username; // required
  public int transactionType; // required
  public short status; // required
  public int promotion; // required
  public String price; // required
  public String content; // required
  public String start_date; // required
  public String end_date; // required
  public String date_created; // required
  public String date_updated; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    USER_ID((short)2, "userId"),
    USERNAME((short)3, "username"),
    TRANSACTION_TYPE((short)4, "transactionType"),
    STATUS((short)5, "status"),
    PROMOTION((short)6, "promotion"),
    PRICE((short)7, "price"),
    CONTENT((short)8, "content"),
    START_DATE((short)9, "start_date"),
    END_DATE((short)10, "end_date"),
    DATE_CREATED((short)11, "date_created"),
    DATE_UPDATED((short)12, "date_updated");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // USERNAME
          return USERNAME;
        case 4: // TRANSACTION_TYPE
          return TRANSACTION_TYPE;
        case 5: // STATUS
          return STATUS;
        case 6: // PROMOTION
          return PROMOTION;
        case 7: // PRICE
          return PRICE;
        case 8: // CONTENT
          return CONTENT;
        case 9: // START_DATE
          return START_DATE;
        case 10: // END_DATE
          return END_DATE;
        case 11: // DATE_CREATED
          return DATE_CREATED;
        case 12: // DATE_UPDATED
          return DATE_UPDATED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __TRANSACTIONTYPE_ISSET_ID = 2;
  private static final int __STATUS_ISSET_ID = 3;
  private static final int __PROMOTION_ISSET_ID = 4;
  private BitSet __isset_bit_vector = new BitSet(5);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USERNAME, new org.apache.thrift.meta_data.FieldMetaData("username", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRANSACTION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("transactionType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.PROMOTION, new org.apache.thrift.meta_data.FieldMetaData("promotion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("start_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("end_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_CREATED, new org.apache.thrift.meta_data.FieldMetaData("date_created", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_UPDATED, new org.apache.thrift.meta_data.FieldMetaData("date_updated", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TPromotion.class, metaDataMap);
  }

  public TPromotion() {
  }

  public TPromotion(
    int id,
    int userId,
    String username,
    int transactionType,
    short status,
    int promotion,
    String price,
    String content,
    String start_date,
    String end_date,
    String date_created,
    String date_updated)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.username = username;
    this.transactionType = transactionType;
    setTransactionTypeIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.promotion = promotion;
    setPromotionIsSet(true);
    this.price = price;
    this.content = content;
    this.start_date = start_date;
    this.end_date = end_date;
    this.date_created = date_created;
    this.date_updated = date_updated;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TPromotion(TPromotion other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.id = other.id;
    this.userId = other.userId;
    if (other.isSetUsername()) {
      this.username = other.username;
    }
    this.transactionType = other.transactionType;
    this.status = other.status;
    this.promotion = other.promotion;
    if (other.isSetPrice()) {
      this.price = other.price;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    if (other.isSetStart_date()) {
      this.start_date = other.start_date;
    }
    if (other.isSetEnd_date()) {
      this.end_date = other.end_date;
    }
    if (other.isSetDate_created()) {
      this.date_created = other.date_created;
    }
    if (other.isSetDate_updated()) {
      this.date_updated = other.date_updated;
    }
  }

  public TPromotion deepCopy() {
    return new TPromotion(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.username = null;
    setTransactionTypeIsSet(false);
    this.transactionType = 0;
    setStatusIsSet(false);
    this.status = 0;
    setPromotionIsSet(false);
    this.promotion = 0;
    this.price = null;
    this.content = null;
    this.start_date = null;
    this.end_date = null;
    this.date_created = null;
    this.date_updated = null;
  }

  public int getId() {
    return this.id;
  }

  public TPromotion setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bit_vector.clear(__ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return __isset_bit_vector.get(__ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bit_vector.set(__ID_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public TPromotion setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public String getUsername() {
    return this.username;
  }

  public TPromotion setUsername(String username) {
    this.username = username;
    return this;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  public int getTransactionType() {
    return this.transactionType;
  }

  public TPromotion setTransactionType(int transactionType) {
    this.transactionType = transactionType;
    setTransactionTypeIsSet(true);
    return this;
  }

  public void unsetTransactionType() {
    __isset_bit_vector.clear(__TRANSACTIONTYPE_ISSET_ID);
  }

  /** Returns true if field transactionType is set (has been assigned a value) and false otherwise */
  public boolean isSetTransactionType() {
    return __isset_bit_vector.get(__TRANSACTIONTYPE_ISSET_ID);
  }

  public void setTransactionTypeIsSet(boolean value) {
    __isset_bit_vector.set(__TRANSACTIONTYPE_ISSET_ID, value);
  }

  public short getStatus() {
    return this.status;
  }

  public TPromotion setStatus(short status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bit_vector.clear(__STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return __isset_bit_vector.get(__STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bit_vector.set(__STATUS_ISSET_ID, value);
  }

  public int getPromotion() {
    return this.promotion;
  }

  public TPromotion setPromotion(int promotion) {
    this.promotion = promotion;
    setPromotionIsSet(true);
    return this;
  }

  public void unsetPromotion() {
    __isset_bit_vector.clear(__PROMOTION_ISSET_ID);
  }

  /** Returns true if field promotion is set (has been assigned a value) and false otherwise */
  public boolean isSetPromotion() {
    return __isset_bit_vector.get(__PROMOTION_ISSET_ID);
  }

  public void setPromotionIsSet(boolean value) {
    __isset_bit_vector.set(__PROMOTION_ISSET_ID, value);
  }

  public String getPrice() {
    return this.price;
  }

  public TPromotion setPrice(String price) {
    this.price = price;
    return this;
  }

  public void unsetPrice() {
    this.price = null;
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return this.price != null;
  }

  public void setPriceIsSet(boolean value) {
    if (!value) {
      this.price = null;
    }
  }

  public String getContent() {
    return this.content;
  }

  public TPromotion setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  public String getStart_date() {
    return this.start_date;
  }

  public TPromotion setStart_date(String start_date) {
    this.start_date = start_date;
    return this;
  }

  public void unsetStart_date() {
    this.start_date = null;
  }

  /** Returns true if field start_date is set (has been assigned a value) and false otherwise */
  public boolean isSetStart_date() {
    return this.start_date != null;
  }

  public void setStart_dateIsSet(boolean value) {
    if (!value) {
      this.start_date = null;
    }
  }

  public String getEnd_date() {
    return this.end_date;
  }

  public TPromotion setEnd_date(String end_date) {
    this.end_date = end_date;
    return this;
  }

  public void unsetEnd_date() {
    this.end_date = null;
  }

  /** Returns true if field end_date is set (has been assigned a value) and false otherwise */
  public boolean isSetEnd_date() {
    return this.end_date != null;
  }

  public void setEnd_dateIsSet(boolean value) {
    if (!value) {
      this.end_date = null;
    }
  }

  public String getDate_created() {
    return this.date_created;
  }

  public TPromotion setDate_created(String date_created) {
    this.date_created = date_created;
    return this;
  }

  public void unsetDate_created() {
    this.date_created = null;
  }

  /** Returns true if field date_created is set (has been assigned a value) and false otherwise */
  public boolean isSetDate_created() {
    return this.date_created != null;
  }

  public void setDate_createdIsSet(boolean value) {
    if (!value) {
      this.date_created = null;
    }
  }

  public String getDate_updated() {
    return this.date_updated;
  }

  public TPromotion setDate_updated(String date_updated) {
    this.date_updated = date_updated;
    return this;
  }

  public void unsetDate_updated() {
    this.date_updated = null;
  }

  /** Returns true if field date_updated is set (has been assigned a value) and false otherwise */
  public boolean isSetDate_updated() {
    return this.date_updated != null;
  }

  public void setDate_updatedIsSet(boolean value) {
    if (!value) {
      this.date_updated = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case USERNAME:
      if (value == null) {
        unsetUsername();
      } else {
        setUsername((String)value);
      }
      break;

    case TRANSACTION_TYPE:
      if (value == null) {
        unsetTransactionType();
      } else {
        setTransactionType((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Short)value);
      }
      break;

    case PROMOTION:
      if (value == null) {
        unsetPromotion();
      } else {
        setPromotion((Integer)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case START_DATE:
      if (value == null) {
        unsetStart_date();
      } else {
        setStart_date((String)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEnd_date();
      } else {
        setEnd_date((String)value);
      }
      break;

    case DATE_CREATED:
      if (value == null) {
        unsetDate_created();
      } else {
        setDate_created((String)value);
      }
      break;

    case DATE_UPDATED:
      if (value == null) {
        unsetDate_updated();
      } else {
        setDate_updated((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case USER_ID:
      return Integer.valueOf(getUserId());

    case USERNAME:
      return getUsername();

    case TRANSACTION_TYPE:
      return Integer.valueOf(getTransactionType());

    case STATUS:
      return Short.valueOf(getStatus());

    case PROMOTION:
      return Integer.valueOf(getPromotion());

    case PRICE:
      return getPrice();

    case CONTENT:
      return getContent();

    case START_DATE:
      return getStart_date();

    case END_DATE:
      return getEnd_date();

    case DATE_CREATED:
      return getDate_created();

    case DATE_UPDATED:
      return getDate_updated();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case USER_ID:
      return isSetUserId();
    case USERNAME:
      return isSetUsername();
    case TRANSACTION_TYPE:
      return isSetTransactionType();
    case STATUS:
      return isSetStatus();
    case PROMOTION:
      return isSetPromotion();
    case PRICE:
      return isSetPrice();
    case CONTENT:
      return isSetContent();
    case START_DATE:
      return isSetStart_date();
    case END_DATE:
      return isSetEnd_date();
    case DATE_CREATED:
      return isSetDate_created();
    case DATE_UPDATED:
      return isSetDate_updated();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TPromotion)
      return this.equals((TPromotion)that);
    return false;
  }

  public boolean equals(TPromotion that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    boolean this_present_transactionType = true;
    boolean that_present_transactionType = true;
    if (this_present_transactionType || that_present_transactionType) {
      if (!(this_present_transactionType && that_present_transactionType))
        return false;
      if (this.transactionType != that.transactionType)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_promotion = true;
    boolean that_present_promotion = true;
    if (this_present_promotion || that_present_promotion) {
      if (!(this_present_promotion && that_present_promotion))
        return false;
      if (this.promotion != that.promotion)
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (!this.price.equals(that.price))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_start_date = true && this.isSetStart_date();
    boolean that_present_start_date = true && that.isSetStart_date();
    if (this_present_start_date || that_present_start_date) {
      if (!(this_present_start_date && that_present_start_date))
        return false;
      if (!this.start_date.equals(that.start_date))
        return false;
    }

    boolean this_present_end_date = true && this.isSetEnd_date();
    boolean that_present_end_date = true && that.isSetEnd_date();
    if (this_present_end_date || that_present_end_date) {
      if (!(this_present_end_date && that_present_end_date))
        return false;
      if (!this.end_date.equals(that.end_date))
        return false;
    }

    boolean this_present_date_created = true && this.isSetDate_created();
    boolean that_present_date_created = true && that.isSetDate_created();
    if (this_present_date_created || that_present_date_created) {
      if (!(this_present_date_created && that_present_date_created))
        return false;
      if (!this.date_created.equals(that.date_created))
        return false;
    }

    boolean this_present_date_updated = true && this.isSetDate_updated();
    boolean that_present_date_updated = true && that.isSetDate_updated();
    if (this_present_date_updated || that_present_date_updated) {
      if (!(this_present_date_updated && that_present_date_updated))
        return false;
      if (!this.date_updated.equals(that.date_updated))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TPromotion other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TPromotion typedOther = (TPromotion)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUsername()).compareTo(typedOther.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username, typedOther.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTransactionType()).compareTo(typedOther.isSetTransactionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransactionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.transactionType, typedOther.transactionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPromotion()).compareTo(typedOther.isSetPromotion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPromotion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.promotion, typedOther.promotion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(typedOther.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, typedOther.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(typedOther.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, typedOther.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStart_date()).compareTo(typedOther.isSetStart_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStart_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.start_date, typedOther.start_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnd_date()).compareTo(typedOther.isSetEnd_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnd_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_date, typedOther.end_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDate_created()).compareTo(typedOther.isSetDate_created());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDate_created()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.date_created, typedOther.date_created);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDate_updated()).compareTo(typedOther.isSetDate_updated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDate_updated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.date_updated, typedOther.date_updated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TPromotion(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("username:");
    if (this.username == null) {
      sb.append("null");
    } else {
      sb.append(this.username);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("transactionType:");
    sb.append(this.transactionType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("promotion:");
    sb.append(this.promotion);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    if (this.price == null) {
      sb.append("null");
    } else {
      sb.append(this.price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      sb.append(this.content);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("start_date:");
    if (this.start_date == null) {
      sb.append("null");
    } else {
      sb.append(this.start_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("end_date:");
    if (this.end_date == null) {
      sb.append("null");
    } else {
      sb.append(this.end_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("date_created:");
    if (this.date_created == null) {
      sb.append("null");
    } else {
      sb.append(this.date_created);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("date_updated:");
    if (this.date_updated == null) {
      sb.append("null");
    } else {
      sb.append(this.date_updated);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TPromotionStandardSchemeFactory implements SchemeFactory {
    public TPromotionStandardScheme getScheme() {
      return new TPromotionStandardScheme();
    }
  }

  private static class TPromotionStandardScheme extends StandardScheme<TPromotion> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TPromotion struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // USERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.username = iprot.readString();
              struct.setUsernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TRANSACTION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.transactionType = iprot.readI32();
              struct.setTransactionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.status = iprot.readI16();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROMOTION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.promotion = iprot.readI32();
              struct.setPromotionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.price = iprot.readString();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.start_date = iprot.readString();
              struct.setStart_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.end_date = iprot.readString();
              struct.setEnd_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DATE_CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.date_created = iprot.readString();
              struct.setDate_createdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DATE_UPDATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.date_updated = iprot.readString();
              struct.setDate_updatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TPromotion struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      if (struct.username != null) {
        oprot.writeFieldBegin(USERNAME_FIELD_DESC);
        oprot.writeString(struct.username);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TRANSACTION_TYPE_FIELD_DESC);
      oprot.writeI32(struct.transactionType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI16(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROMOTION_FIELD_DESC);
      oprot.writeI32(struct.promotion);
      oprot.writeFieldEnd();
      if (struct.price != null) {
        oprot.writeFieldBegin(PRICE_FIELD_DESC);
        oprot.writeString(struct.price);
        oprot.writeFieldEnd();
      }
      if (struct.content != null) {
        oprot.writeFieldBegin(CONTENT_FIELD_DESC);
        oprot.writeString(struct.content);
        oprot.writeFieldEnd();
      }
      if (struct.start_date != null) {
        oprot.writeFieldBegin(START_DATE_FIELD_DESC);
        oprot.writeString(struct.start_date);
        oprot.writeFieldEnd();
      }
      if (struct.end_date != null) {
        oprot.writeFieldBegin(END_DATE_FIELD_DESC);
        oprot.writeString(struct.end_date);
        oprot.writeFieldEnd();
      }
      if (struct.date_created != null) {
        oprot.writeFieldBegin(DATE_CREATED_FIELD_DESC);
        oprot.writeString(struct.date_created);
        oprot.writeFieldEnd();
      }
      if (struct.date_updated != null) {
        oprot.writeFieldBegin(DATE_UPDATED_FIELD_DESC);
        oprot.writeString(struct.date_updated);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TPromotionTupleSchemeFactory implements SchemeFactory {
    public TPromotionTupleScheme getScheme() {
      return new TPromotionTupleScheme();
    }
  }

  private static class TPromotionTupleScheme extends TupleScheme<TPromotion> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TPromotion struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetUsername()) {
        optionals.set(2);
      }
      if (struct.isSetTransactionType()) {
        optionals.set(3);
      }
      if (struct.isSetStatus()) {
        optionals.set(4);
      }
      if (struct.isSetPromotion()) {
        optionals.set(5);
      }
      if (struct.isSetPrice()) {
        optionals.set(6);
      }
      if (struct.isSetContent()) {
        optionals.set(7);
      }
      if (struct.isSetStart_date()) {
        optionals.set(8);
      }
      if (struct.isSetEnd_date()) {
        optionals.set(9);
      }
      if (struct.isSetDate_created()) {
        optionals.set(10);
      }
      if (struct.isSetDate_updated()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetUsername()) {
        oprot.writeString(struct.username);
      }
      if (struct.isSetTransactionType()) {
        oprot.writeI32(struct.transactionType);
      }
      if (struct.isSetStatus()) {
        oprot.writeI16(struct.status);
      }
      if (struct.isSetPromotion()) {
        oprot.writeI32(struct.promotion);
      }
      if (struct.isSetPrice()) {
        oprot.writeString(struct.price);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetStart_date()) {
        oprot.writeString(struct.start_date);
      }
      if (struct.isSetEnd_date()) {
        oprot.writeString(struct.end_date);
      }
      if (struct.isSetDate_created()) {
        oprot.writeString(struct.date_created);
      }
      if (struct.isSetDate_updated()) {
        oprot.writeString(struct.date_updated);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TPromotion struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.username = iprot.readString();
        struct.setUsernameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.transactionType = iprot.readI32();
        struct.setTransactionTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.status = iprot.readI16();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(5)) {
        struct.promotion = iprot.readI32();
        struct.setPromotionIsSet(true);
      }
      if (incoming.get(6)) {
        struct.price = iprot.readString();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(8)) {
        struct.start_date = iprot.readString();
        struct.setStart_dateIsSet(true);
      }
      if (incoming.get(9)) {
        struct.end_date = iprot.readString();
        struct.setEnd_dateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.date_created = iprot.readString();
        struct.setDate_createdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.date_updated = iprot.readString();
        struct.setDate_updatedIsSet(true);
      }
    }
  }

}

