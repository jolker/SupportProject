/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package vn.nct.cardgame.profile.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TProfileLink implements org.apache.thrift.TBase<TProfileLink, TProfileLink._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TProfileLink");

  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PROFILE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profileId", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField GAME_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("gameId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DATE_CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("dateCreated", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TProfileLinkStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TProfileLinkTupleSchemeFactory());
  }

  public long userId; // required
  public String userName; // required
  public String source; // required
  public String profileId; // required
  public String gameId; // required
  public String dateCreated; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER_ID((short)1, "userId"),
    USER_NAME((short)2, "userName"),
    SOURCE((short)4, "source"),
    PROFILE_ID((short)5, "profileId"),
    GAME_ID((short)6, "gameId"),
    DATE_CREATED((short)7, "dateCreated");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_ID
          return USER_ID;
        case 2: // USER_NAME
          return USER_NAME;
        case 4: // SOURCE
          return SOURCE;
        case 5: // PROFILE_ID
          return PROFILE_ID;
        case 6: // GAME_ID
          return GAME_ID;
        case 7: // DATE_CREATED
          return DATE_CREATED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __USERID_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROFILE_ID, new org.apache.thrift.meta_data.FieldMetaData("profileId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GAME_ID, new org.apache.thrift.meta_data.FieldMetaData("gameId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_CREATED, new org.apache.thrift.meta_data.FieldMetaData("dateCreated", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TProfileLink.class, metaDataMap);
  }

  public TProfileLink() {
  }

  public TProfileLink(
    long userId,
    String userName,
    String source,
    String profileId,
    String gameId,
    String dateCreated)
  {
    this();
    this.userId = userId;
    setUserIdIsSet(true);
    this.userName = userName;
    this.source = source;
    this.profileId = profileId;
    this.gameId = gameId;
    this.dateCreated = dateCreated;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TProfileLink(TProfileLink other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.userId = other.userId;
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetSource()) {
      this.source = other.source;
    }
    if (other.isSetProfileId()) {
      this.profileId = other.profileId;
    }
    if (other.isSetGameId()) {
      this.gameId = other.gameId;
    }
    if (other.isSetDateCreated()) {
      this.dateCreated = other.dateCreated;
    }
  }

  public TProfileLink deepCopy() {
    return new TProfileLink(this);
  }

  @Override
  public void clear() {
    setUserIdIsSet(false);
    this.userId = 0;
    this.userName = null;
    this.source = null;
    this.profileId = null;
    this.gameId = null;
    this.dateCreated = null;
  }

  public long getUserId() {
    return this.userId;
  }

  public TProfileLink setUserId(long userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public String getUserName() {
    return this.userName;
  }

  public TProfileLink setUserName(String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public String getSource() {
    return this.source;
  }

  public TProfileLink setSource(String source) {
    this.source = source;
    return this;
  }

  public void unsetSource() {
    this.source = null;
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return this.source != null;
  }

  public void setSourceIsSet(boolean value) {
    if (!value) {
      this.source = null;
    }
  }

  public String getProfileId() {
    return this.profileId;
  }

  public TProfileLink setProfileId(String profileId) {
    this.profileId = profileId;
    return this;
  }

  public void unsetProfileId() {
    this.profileId = null;
  }

  /** Returns true if field profileId is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileId() {
    return this.profileId != null;
  }

  public void setProfileIdIsSet(boolean value) {
    if (!value) {
      this.profileId = null;
    }
  }

  public String getGameId() {
    return this.gameId;
  }

  public TProfileLink setGameId(String gameId) {
    this.gameId = gameId;
    return this;
  }

  public void unsetGameId() {
    this.gameId = null;
  }

  /** Returns true if field gameId is set (has been assigned a value) and false otherwise */
  public boolean isSetGameId() {
    return this.gameId != null;
  }

  public void setGameIdIsSet(boolean value) {
    if (!value) {
      this.gameId = null;
    }
  }

  public String getDateCreated() {
    return this.dateCreated;
  }

  public TProfileLink setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  public void unsetDateCreated() {
    this.dateCreated = null;
  }

  /** Returns true if field dateCreated is set (has been assigned a value) and false otherwise */
  public boolean isSetDateCreated() {
    return this.dateCreated != null;
  }

  public void setDateCreatedIsSet(boolean value) {
    if (!value) {
      this.dateCreated = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Long)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((String)value);
      }
      break;

    case PROFILE_ID:
      if (value == null) {
        unsetProfileId();
      } else {
        setProfileId((String)value);
      }
      break;

    case GAME_ID:
      if (value == null) {
        unsetGameId();
      } else {
        setGameId((String)value);
      }
      break;

    case DATE_CREATED:
      if (value == null) {
        unsetDateCreated();
      } else {
        setDateCreated((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_ID:
      return Long.valueOf(getUserId());

    case USER_NAME:
      return getUserName();

    case SOURCE:
      return getSource();

    case PROFILE_ID:
      return getProfileId();

    case GAME_ID:
      return getGameId();

    case DATE_CREATED:
      return getDateCreated();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER_ID:
      return isSetUserId();
    case USER_NAME:
      return isSetUserName();
    case SOURCE:
      return isSetSource();
    case PROFILE_ID:
      return isSetProfileId();
    case GAME_ID:
      return isSetGameId();
    case DATE_CREATED:
      return isSetDateCreated();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TProfileLink)
      return this.equals((TProfileLink)that);
    return false;
  }

  public boolean equals(TProfileLink that) {
    if (that == null)
      return false;

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (!this.source.equals(that.source))
        return false;
    }

    boolean this_present_profileId = true && this.isSetProfileId();
    boolean that_present_profileId = true && that.isSetProfileId();
    if (this_present_profileId || that_present_profileId) {
      if (!(this_present_profileId && that_present_profileId))
        return false;
      if (!this.profileId.equals(that.profileId))
        return false;
    }

    boolean this_present_gameId = true && this.isSetGameId();
    boolean that_present_gameId = true && that.isSetGameId();
    if (this_present_gameId || that_present_gameId) {
      if (!(this_present_gameId && that_present_gameId))
        return false;
      if (!this.gameId.equals(that.gameId))
        return false;
    }

    boolean this_present_dateCreated = true && this.isSetDateCreated();
    boolean that_present_dateCreated = true && that.isSetDateCreated();
    if (this_present_dateCreated || that_present_dateCreated) {
      if (!(this_present_dateCreated && that_present_dateCreated))
        return false;
      if (!this.dateCreated.equals(that.dateCreated))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TProfileLink other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TProfileLink typedOther = (TProfileLink)other;

    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(typedOther.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, typedOther.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSource()).compareTo(typedOther.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, typedOther.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileId()).compareTo(typedOther.isSetProfileId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileId, typedOther.profileId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGameId()).compareTo(typedOther.isSetGameId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gameId, typedOther.gameId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateCreated()).compareTo(typedOther.isSetDateCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateCreated, typedOther.dateCreated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TProfileLink(");
    boolean first = true;

    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("source:");
    if (this.source == null) {
      sb.append("null");
    } else {
      sb.append(this.source);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("profileId:");
    if (this.profileId == null) {
      sb.append("null");
    } else {
      sb.append(this.profileId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("gameId:");
    if (this.gameId == null) {
      sb.append("null");
    } else {
      sb.append(this.gameId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateCreated:");
    if (this.dateCreated == null) {
      sb.append("null");
    } else {
      sb.append(this.dateCreated);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TProfileLinkStandardSchemeFactory implements SchemeFactory {
    public TProfileLinkStandardScheme getScheme() {
      return new TProfileLinkStandardScheme();
    }
  }

  private static class TProfileLinkStandardScheme extends StandardScheme<TProfileLink> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TProfileLink struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.userId = iprot.readI64();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.source = iprot.readString();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PROFILE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.profileId = iprot.readString();
              struct.setProfileIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // GAME_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.gameId = iprot.readString();
              struct.setGameIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DATE_CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dateCreated = iprot.readString();
              struct.setDateCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TProfileLink struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI64(struct.userId);
      oprot.writeFieldEnd();
      if (struct.userName != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.userName);
        oprot.writeFieldEnd();
      }
      if (struct.source != null) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeString(struct.source);
        oprot.writeFieldEnd();
      }
      if (struct.profileId != null) {
        oprot.writeFieldBegin(PROFILE_ID_FIELD_DESC);
        oprot.writeString(struct.profileId);
        oprot.writeFieldEnd();
      }
      if (struct.gameId != null) {
        oprot.writeFieldBegin(GAME_ID_FIELD_DESC);
        oprot.writeString(struct.gameId);
        oprot.writeFieldEnd();
      }
      if (struct.dateCreated != null) {
        oprot.writeFieldBegin(DATE_CREATED_FIELD_DESC);
        oprot.writeString(struct.dateCreated);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TProfileLinkTupleSchemeFactory implements SchemeFactory {
    public TProfileLinkTupleScheme getScheme() {
      return new TProfileLinkTupleScheme();
    }
  }

  private static class TProfileLinkTupleScheme extends TupleScheme<TProfileLink> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TProfileLink struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetUserId()) {
        optionals.set(0);
      }
      if (struct.isSetUserName()) {
        optionals.set(1);
      }
      if (struct.isSetSource()) {
        optionals.set(2);
      }
      if (struct.isSetProfileId()) {
        optionals.set(3);
      }
      if (struct.isSetGameId()) {
        optionals.set(4);
      }
      if (struct.isSetDateCreated()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetUserId()) {
        oprot.writeI64(struct.userId);
      }
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetSource()) {
        oprot.writeString(struct.source);
      }
      if (struct.isSetProfileId()) {
        oprot.writeString(struct.profileId);
      }
      if (struct.isSetGameId()) {
        oprot.writeString(struct.gameId);
      }
      if (struct.isSetDateCreated()) {
        oprot.writeString(struct.dateCreated);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TProfileLink struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.userId = iprot.readI64();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.source = iprot.readString();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(3)) {
        struct.profileId = iprot.readString();
        struct.setProfileIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.gameId = iprot.readString();
        struct.setGameIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.dateCreated = iprot.readString();
        struct.setDateCreatedIsSet(true);
      }
    }
  }

}

