/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bliss.service.paymentv2.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TProductValue implements org.apache.thrift.TBase<TProductValue, TProductValue._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TProductValue");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField APP_PACKAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appPackageId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("productKey", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRODUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("productType", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("amount", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField MESSAGE_CONFIG_FIELD_DESC = new org.apache.thrift.protocol.TField("messageConfig", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PREFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("prefix", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField N_COIN_FIELD_DESC = new org.apache.thrift.protocol.TField("nCoin", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField PROMOTION_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("promotionRate", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField PROMOTION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("promotionType", org.apache.thrift.protocol.TType.I32, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TProductValueStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TProductValueTupleSchemeFactory());
  }

  public int productId; // required
  public String appPackageId; // required
  public String productKey; // required
  /**
   * 
   * @see EProductType
   */
  public EProductType productType; // required
  public int amount; // required
  public String messageConfig; // required
  public String prefix; // required
  public long nCoin; // required
  /**
   * 
   * @see EStatus
   */
  public EStatus status; // required
  public int promotionRate; // required
  /**
   * 
   * @see EPromotionType
   */
  public EPromotionType promotionType; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRODUCT_ID((short)1, "productId"),
    APP_PACKAGE_ID((short)2, "appPackageId"),
    PRODUCT_KEY((short)3, "productKey"),
    /**
     * 
     * @see EProductType
     */
    PRODUCT_TYPE((short)4, "productType"),
    AMOUNT((short)5, "amount"),
    MESSAGE_CONFIG((short)6, "messageConfig"),
    PREFIX((short)7, "prefix"),
    N_COIN((short)8, "nCoin"),
    /**
     * 
     * @see EStatus
     */
    STATUS((short)9, "status"),
    PROMOTION_RATE((short)10, "promotionRate"),
    /**
     * 
     * @see EPromotionType
     */
    PROMOTION_TYPE((short)11, "promotionType");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // APP_PACKAGE_ID
          return APP_PACKAGE_ID;
        case 3: // PRODUCT_KEY
          return PRODUCT_KEY;
        case 4: // PRODUCT_TYPE
          return PRODUCT_TYPE;
        case 5: // AMOUNT
          return AMOUNT;
        case 6: // MESSAGE_CONFIG
          return MESSAGE_CONFIG;
        case 7: // PREFIX
          return PREFIX;
        case 8: // N_COIN
          return N_COIN;
        case 9: // STATUS
          return STATUS;
        case 10: // PROMOTION_RATE
          return PROMOTION_RATE;
        case 11: // PROMOTION_TYPE
          return PROMOTION_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PRODUCTID_ISSET_ID = 0;
  private static final int __AMOUNT_ISSET_ID = 1;
  private static final int __NCOIN_ISSET_ID = 2;
  private static final int __PROMOTIONRATE_ISSET_ID = 3;
  private BitSet __isset_bit_vector = new BitSet(4);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APP_PACKAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("appPackageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_KEY, new org.apache.thrift.meta_data.FieldMetaData("productKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("productType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, EProductType.class)));
    tmpMap.put(_Fields.AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("amount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MESSAGE_CONFIG, new org.apache.thrift.meta_data.FieldMetaData("messageConfig", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PREFIX, new org.apache.thrift.meta_data.FieldMetaData("prefix", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.N_COIN, new org.apache.thrift.meta_data.FieldMetaData("nCoin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, EStatus.class)));
    tmpMap.put(_Fields.PROMOTION_RATE, new org.apache.thrift.meta_data.FieldMetaData("promotionRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROMOTION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("promotionType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, EPromotionType.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TProductValue.class, metaDataMap);
  }

  public TProductValue() {
  }

  public TProductValue(
    int productId,
    String appPackageId,
    String productKey,
    EProductType productType,
    int amount,
    String messageConfig,
    String prefix,
    long nCoin,
    EStatus status,
    int promotionRate,
    EPromotionType promotionType)
  {
    this();
    this.productId = productId;
    setProductIdIsSet(true);
    this.appPackageId = appPackageId;
    this.productKey = productKey;
    this.productType = productType;
    this.amount = amount;
    setAmountIsSet(true);
    this.messageConfig = messageConfig;
    this.prefix = prefix;
    this.nCoin = nCoin;
    setNCoinIsSet(true);
    this.status = status;
    this.promotionRate = promotionRate;
    setPromotionRateIsSet(true);
    this.promotionType = promotionType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TProductValue(TProductValue other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.productId = other.productId;
    if (other.isSetAppPackageId()) {
      this.appPackageId = other.appPackageId;
    }
    if (other.isSetProductKey()) {
      this.productKey = other.productKey;
    }
    if (other.isSetProductType()) {
      this.productType = other.productType;
    }
    this.amount = other.amount;
    if (other.isSetMessageConfig()) {
      this.messageConfig = other.messageConfig;
    }
    if (other.isSetPrefix()) {
      this.prefix = other.prefix;
    }
    this.nCoin = other.nCoin;
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    this.promotionRate = other.promotionRate;
    if (other.isSetPromotionType()) {
      this.promotionType = other.promotionType;
    }
  }

  public TProductValue deepCopy() {
    return new TProductValue(this);
  }

  @Override
  public void clear() {
    setProductIdIsSet(false);
    this.productId = 0;
    this.appPackageId = null;
    this.productKey = null;
    this.productType = null;
    setAmountIsSet(false);
    this.amount = 0;
    this.messageConfig = null;
    this.prefix = null;
    setNCoinIsSet(false);
    this.nCoin = 0;
    this.status = null;
    setPromotionRateIsSet(false);
    this.promotionRate = 0;
    this.promotionType = null;
  }

  public int getProductId() {
    return this.productId;
  }

  public TProductValue setProductId(int productId) {
    this.productId = productId;
    setProductIdIsSet(true);
    return this;
  }

  public void unsetProductId() {
    __isset_bit_vector.clear(__PRODUCTID_ISSET_ID);
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return __isset_bit_vector.get(__PRODUCTID_ISSET_ID);
  }

  public void setProductIdIsSet(boolean value) {
    __isset_bit_vector.set(__PRODUCTID_ISSET_ID, value);
  }

  public String getAppPackageId() {
    return this.appPackageId;
  }

  public TProductValue setAppPackageId(String appPackageId) {
    this.appPackageId = appPackageId;
    return this;
  }

  public void unsetAppPackageId() {
    this.appPackageId = null;
  }

  /** Returns true if field appPackageId is set (has been assigned a value) and false otherwise */
  public boolean isSetAppPackageId() {
    return this.appPackageId != null;
  }

  public void setAppPackageIdIsSet(boolean value) {
    if (!value) {
      this.appPackageId = null;
    }
  }

  public String getProductKey() {
    return this.productKey;
  }

  public TProductValue setProductKey(String productKey) {
    this.productKey = productKey;
    return this;
  }

  public void unsetProductKey() {
    this.productKey = null;
  }

  /** Returns true if field productKey is set (has been assigned a value) and false otherwise */
  public boolean isSetProductKey() {
    return this.productKey != null;
  }

  public void setProductKeyIsSet(boolean value) {
    if (!value) {
      this.productKey = null;
    }
  }

  /**
   * 
   * @see EProductType
   */
  public EProductType getProductType() {
    return this.productType;
  }

  /**
   * 
   * @see EProductType
   */
  public TProductValue setProductType(EProductType productType) {
    this.productType = productType;
    return this;
  }

  public void unsetProductType() {
    this.productType = null;
  }

  /** Returns true if field productType is set (has been assigned a value) and false otherwise */
  public boolean isSetProductType() {
    return this.productType != null;
  }

  public void setProductTypeIsSet(boolean value) {
    if (!value) {
      this.productType = null;
    }
  }

  public int getAmount() {
    return this.amount;
  }

  public TProductValue setAmount(int amount) {
    this.amount = amount;
    setAmountIsSet(true);
    return this;
  }

  public void unsetAmount() {
    __isset_bit_vector.clear(__AMOUNT_ISSET_ID);
  }

  /** Returns true if field amount is set (has been assigned a value) and false otherwise */
  public boolean isSetAmount() {
    return __isset_bit_vector.get(__AMOUNT_ISSET_ID);
  }

  public void setAmountIsSet(boolean value) {
    __isset_bit_vector.set(__AMOUNT_ISSET_ID, value);
  }

  public String getMessageConfig() {
    return this.messageConfig;
  }

  public TProductValue setMessageConfig(String messageConfig) {
    this.messageConfig = messageConfig;
    return this;
  }

  public void unsetMessageConfig() {
    this.messageConfig = null;
  }

  /** Returns true if field messageConfig is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageConfig() {
    return this.messageConfig != null;
  }

  public void setMessageConfigIsSet(boolean value) {
    if (!value) {
      this.messageConfig = null;
    }
  }

  public String getPrefix() {
    return this.prefix;
  }

  public TProductValue setPrefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  public void unsetPrefix() {
    this.prefix = null;
  }

  /** Returns true if field prefix is set (has been assigned a value) and false otherwise */
  public boolean isSetPrefix() {
    return this.prefix != null;
  }

  public void setPrefixIsSet(boolean value) {
    if (!value) {
      this.prefix = null;
    }
  }

  public long getNCoin() {
    return this.nCoin;
  }

  public TProductValue setNCoin(long nCoin) {
    this.nCoin = nCoin;
    setNCoinIsSet(true);
    return this;
  }

  public void unsetNCoin() {
    __isset_bit_vector.clear(__NCOIN_ISSET_ID);
  }

  /** Returns true if field nCoin is set (has been assigned a value) and false otherwise */
  public boolean isSetNCoin() {
    return __isset_bit_vector.get(__NCOIN_ISSET_ID);
  }

  public void setNCoinIsSet(boolean value) {
    __isset_bit_vector.set(__NCOIN_ISSET_ID, value);
  }

  /**
   * 
   * @see EStatus
   */
  public EStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see EStatus
   */
  public TProductValue setStatus(EStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public int getPromotionRate() {
    return this.promotionRate;
  }

  public TProductValue setPromotionRate(int promotionRate) {
    this.promotionRate = promotionRate;
    setPromotionRateIsSet(true);
    return this;
  }

  public void unsetPromotionRate() {
    __isset_bit_vector.clear(__PROMOTIONRATE_ISSET_ID);
  }

  /** Returns true if field promotionRate is set (has been assigned a value) and false otherwise */
  public boolean isSetPromotionRate() {
    return __isset_bit_vector.get(__PROMOTIONRATE_ISSET_ID);
  }

  public void setPromotionRateIsSet(boolean value) {
    __isset_bit_vector.set(__PROMOTIONRATE_ISSET_ID, value);
  }

  /**
   * 
   * @see EPromotionType
   */
  public EPromotionType getPromotionType() {
    return this.promotionType;
  }

  /**
   * 
   * @see EPromotionType
   */
  public TProductValue setPromotionType(EPromotionType promotionType) {
    this.promotionType = promotionType;
    return this;
  }

  public void unsetPromotionType() {
    this.promotionType = null;
  }

  /** Returns true if field promotionType is set (has been assigned a value) and false otherwise */
  public boolean isSetPromotionType() {
    return this.promotionType != null;
  }

  public void setPromotionTypeIsSet(boolean value) {
    if (!value) {
      this.promotionType = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((Integer)value);
      }
      break;

    case APP_PACKAGE_ID:
      if (value == null) {
        unsetAppPackageId();
      } else {
        setAppPackageId((String)value);
      }
      break;

    case PRODUCT_KEY:
      if (value == null) {
        unsetProductKey();
      } else {
        setProductKey((String)value);
      }
      break;

    case PRODUCT_TYPE:
      if (value == null) {
        unsetProductType();
      } else {
        setProductType((EProductType)value);
      }
      break;

    case AMOUNT:
      if (value == null) {
        unsetAmount();
      } else {
        setAmount((Integer)value);
      }
      break;

    case MESSAGE_CONFIG:
      if (value == null) {
        unsetMessageConfig();
      } else {
        setMessageConfig((String)value);
      }
      break;

    case PREFIX:
      if (value == null) {
        unsetPrefix();
      } else {
        setPrefix((String)value);
      }
      break;

    case N_COIN:
      if (value == null) {
        unsetNCoin();
      } else {
        setNCoin((Long)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((EStatus)value);
      }
      break;

    case PROMOTION_RATE:
      if (value == null) {
        unsetPromotionRate();
      } else {
        setPromotionRate((Integer)value);
      }
      break;

    case PROMOTION_TYPE:
      if (value == null) {
        unsetPromotionType();
      } else {
        setPromotionType((EPromotionType)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return Integer.valueOf(getProductId());

    case APP_PACKAGE_ID:
      return getAppPackageId();

    case PRODUCT_KEY:
      return getProductKey();

    case PRODUCT_TYPE:
      return getProductType();

    case AMOUNT:
      return Integer.valueOf(getAmount());

    case MESSAGE_CONFIG:
      return getMessageConfig();

    case PREFIX:
      return getPrefix();

    case N_COIN:
      return Long.valueOf(getNCoin());

    case STATUS:
      return getStatus();

    case PROMOTION_RATE:
      return Integer.valueOf(getPromotionRate());

    case PROMOTION_TYPE:
      return getPromotionType();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case APP_PACKAGE_ID:
      return isSetAppPackageId();
    case PRODUCT_KEY:
      return isSetProductKey();
    case PRODUCT_TYPE:
      return isSetProductType();
    case AMOUNT:
      return isSetAmount();
    case MESSAGE_CONFIG:
      return isSetMessageConfig();
    case PREFIX:
      return isSetPrefix();
    case N_COIN:
      return isSetNCoin();
    case STATUS:
      return isSetStatus();
    case PROMOTION_RATE:
      return isSetPromotionRate();
    case PROMOTION_TYPE:
      return isSetPromotionType();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TProductValue)
      return this.equals((TProductValue)that);
    return false;
  }

  public boolean equals(TProductValue that) {
    if (that == null)
      return false;

    boolean this_present_productId = true;
    boolean that_present_productId = true;
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (this.productId != that.productId)
        return false;
    }

    boolean this_present_appPackageId = true && this.isSetAppPackageId();
    boolean that_present_appPackageId = true && that.isSetAppPackageId();
    if (this_present_appPackageId || that_present_appPackageId) {
      if (!(this_present_appPackageId && that_present_appPackageId))
        return false;
      if (!this.appPackageId.equals(that.appPackageId))
        return false;
    }

    boolean this_present_productKey = true && this.isSetProductKey();
    boolean that_present_productKey = true && that.isSetProductKey();
    if (this_present_productKey || that_present_productKey) {
      if (!(this_present_productKey && that_present_productKey))
        return false;
      if (!this.productKey.equals(that.productKey))
        return false;
    }

    boolean this_present_productType = true && this.isSetProductType();
    boolean that_present_productType = true && that.isSetProductType();
    if (this_present_productType || that_present_productType) {
      if (!(this_present_productType && that_present_productType))
        return false;
      if (!this.productType.equals(that.productType))
        return false;
    }

    boolean this_present_amount = true;
    boolean that_present_amount = true;
    if (this_present_amount || that_present_amount) {
      if (!(this_present_amount && that_present_amount))
        return false;
      if (this.amount != that.amount)
        return false;
    }

    boolean this_present_messageConfig = true && this.isSetMessageConfig();
    boolean that_present_messageConfig = true && that.isSetMessageConfig();
    if (this_present_messageConfig || that_present_messageConfig) {
      if (!(this_present_messageConfig && that_present_messageConfig))
        return false;
      if (!this.messageConfig.equals(that.messageConfig))
        return false;
    }

    boolean this_present_prefix = true && this.isSetPrefix();
    boolean that_present_prefix = true && that.isSetPrefix();
    if (this_present_prefix || that_present_prefix) {
      if (!(this_present_prefix && that_present_prefix))
        return false;
      if (!this.prefix.equals(that.prefix))
        return false;
    }

    boolean this_present_nCoin = true;
    boolean that_present_nCoin = true;
    if (this_present_nCoin || that_present_nCoin) {
      if (!(this_present_nCoin && that_present_nCoin))
        return false;
      if (this.nCoin != that.nCoin)
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_promotionRate = true;
    boolean that_present_promotionRate = true;
    if (this_present_promotionRate || that_present_promotionRate) {
      if (!(this_present_promotionRate && that_present_promotionRate))
        return false;
      if (this.promotionRate != that.promotionRate)
        return false;
    }

    boolean this_present_promotionType = true && this.isSetPromotionType();
    boolean that_present_promotionType = true && that.isSetPromotionType();
    if (this_present_promotionType || that_present_promotionType) {
      if (!(this_present_promotionType && that_present_promotionType))
        return false;
      if (!this.promotionType.equals(that.promotionType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TProductValue other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TProductValue typedOther = (TProductValue)other;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(typedOther.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, typedOther.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppPackageId()).compareTo(typedOther.isSetAppPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppPackageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appPackageId, typedOther.appPackageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductKey()).compareTo(typedOther.isSetProductKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productKey, typedOther.productKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductType()).compareTo(typedOther.isSetProductType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productType, typedOther.productType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.amount, typedOther.amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMessageConfig()).compareTo(typedOther.isSetMessageConfig());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageConfig()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageConfig, typedOther.messageConfig);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrefix()).compareTo(typedOther.isSetPrefix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrefix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.prefix, typedOther.prefix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNCoin()).compareTo(typedOther.isSetNCoin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNCoin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nCoin, typedOther.nCoin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPromotionRate()).compareTo(typedOther.isSetPromotionRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPromotionRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.promotionRate, typedOther.promotionRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPromotionType()).compareTo(typedOther.isSetPromotionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPromotionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.promotionType, typedOther.promotionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TProductValue(");
    boolean first = true;

    sb.append("productId:");
    sb.append(this.productId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("appPackageId:");
    if (this.appPackageId == null) {
      sb.append("null");
    } else {
      sb.append(this.appPackageId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productKey:");
    if (this.productKey == null) {
      sb.append("null");
    } else {
      sb.append(this.productKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productType:");
    if (this.productType == null) {
      sb.append("null");
    } else {
      sb.append(this.productType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("amount:");
    sb.append(this.amount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageConfig:");
    if (this.messageConfig == null) {
      sb.append("null");
    } else {
      sb.append(this.messageConfig);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("prefix:");
    if (this.prefix == null) {
      sb.append("null");
    } else {
      sb.append(this.prefix);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nCoin:");
    sb.append(this.nCoin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("promotionRate:");
    sb.append(this.promotionRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("promotionType:");
    if (this.promotionType == null) {
      sb.append("null");
    } else {
      sb.append(this.promotionType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TProductValueStandardSchemeFactory implements SchemeFactory {
    public TProductValueStandardScheme getScheme() {
      return new TProductValueStandardScheme();
    }
  }

  private static class TProductValueStandardScheme extends StandardScheme<TProductValue> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TProductValue struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productId = iprot.readI32();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_PACKAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appPackageId = iprot.readString();
              struct.setAppPackageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productKey = iprot.readString();
              struct.setProductKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRODUCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productType = EProductType.findByValue(iprot.readI32());
              struct.setProductTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.amount = iprot.readI32();
              struct.setAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MESSAGE_CONFIG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageConfig = iprot.readString();
              struct.setMessageConfigIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PREFIX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.prefix = iprot.readString();
              struct.setPrefixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // N_COIN
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nCoin = iprot.readI64();
              struct.setNCoinIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = EStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PROMOTION_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.promotionRate = iprot.readI32();
              struct.setPromotionRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PROMOTION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.promotionType = EPromotionType.findByValue(iprot.readI32());
              struct.setPromotionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TProductValue struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeI32(struct.productId);
      oprot.writeFieldEnd();
      if (struct.appPackageId != null) {
        oprot.writeFieldBegin(APP_PACKAGE_ID_FIELD_DESC);
        oprot.writeString(struct.appPackageId);
        oprot.writeFieldEnd();
      }
      if (struct.productKey != null) {
        oprot.writeFieldBegin(PRODUCT_KEY_FIELD_DESC);
        oprot.writeString(struct.productKey);
        oprot.writeFieldEnd();
      }
      if (struct.productType != null) {
        oprot.writeFieldBegin(PRODUCT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.productType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
      oprot.writeI32(struct.amount);
      oprot.writeFieldEnd();
      if (struct.messageConfig != null) {
        oprot.writeFieldBegin(MESSAGE_CONFIG_FIELD_DESC);
        oprot.writeString(struct.messageConfig);
        oprot.writeFieldEnd();
      }
      if (struct.prefix != null) {
        oprot.writeFieldBegin(PREFIX_FIELD_DESC);
        oprot.writeString(struct.prefix);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(N_COIN_FIELD_DESC);
      oprot.writeI64(struct.nCoin);
      oprot.writeFieldEnd();
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PROMOTION_RATE_FIELD_DESC);
      oprot.writeI32(struct.promotionRate);
      oprot.writeFieldEnd();
      if (struct.promotionType != null) {
        oprot.writeFieldBegin(PROMOTION_TYPE_FIELD_DESC);
        oprot.writeI32(struct.promotionType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TProductValueTupleSchemeFactory implements SchemeFactory {
    public TProductValueTupleScheme getScheme() {
      return new TProductValueTupleScheme();
    }
  }

  private static class TProductValueTupleScheme extends TupleScheme<TProductValue> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TProductValue struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetAppPackageId()) {
        optionals.set(1);
      }
      if (struct.isSetProductKey()) {
        optionals.set(2);
      }
      if (struct.isSetProductType()) {
        optionals.set(3);
      }
      if (struct.isSetAmount()) {
        optionals.set(4);
      }
      if (struct.isSetMessageConfig()) {
        optionals.set(5);
      }
      if (struct.isSetPrefix()) {
        optionals.set(6);
      }
      if (struct.isSetNCoin()) {
        optionals.set(7);
      }
      if (struct.isSetStatus()) {
        optionals.set(8);
      }
      if (struct.isSetPromotionRate()) {
        optionals.set(9);
      }
      if (struct.isSetPromotionType()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetProductId()) {
        oprot.writeI32(struct.productId);
      }
      if (struct.isSetAppPackageId()) {
        oprot.writeString(struct.appPackageId);
      }
      if (struct.isSetProductKey()) {
        oprot.writeString(struct.productKey);
      }
      if (struct.isSetProductType()) {
        oprot.writeI32(struct.productType.getValue());
      }
      if (struct.isSetAmount()) {
        oprot.writeI32(struct.amount);
      }
      if (struct.isSetMessageConfig()) {
        oprot.writeString(struct.messageConfig);
      }
      if (struct.isSetPrefix()) {
        oprot.writeString(struct.prefix);
      }
      if (struct.isSetNCoin()) {
        oprot.writeI64(struct.nCoin);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetPromotionRate()) {
        oprot.writeI32(struct.promotionRate);
      }
      if (struct.isSetPromotionType()) {
        oprot.writeI32(struct.promotionType.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TProductValue struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.productId = iprot.readI32();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.appPackageId = iprot.readString();
        struct.setAppPackageIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productKey = iprot.readString();
        struct.setProductKeyIsSet(true);
      }
      if (incoming.get(3)) {
        struct.productType = EProductType.findByValue(iprot.readI32());
        struct.setProductTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.amount = iprot.readI32();
        struct.setAmountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.messageConfig = iprot.readString();
        struct.setMessageConfigIsSet(true);
      }
      if (incoming.get(6)) {
        struct.prefix = iprot.readString();
        struct.setPrefixIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nCoin = iprot.readI64();
        struct.setNCoinIsSet(true);
      }
      if (incoming.get(8)) {
        struct.status = EStatus.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(9)) {
        struct.promotionRate = iprot.readI32();
        struct.setPromotionRateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.promotionType = EPromotionType.findByValue(iprot.readI32());
        struct.setPromotionTypeIsSet(true);
      }
    }
  }

}

