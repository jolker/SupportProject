/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bliss.service.paymentv2.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TUserPromotion implements org.apache.thrift.TBase<TUserPromotion, TUserPromotion._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TUserPromotion");

  private static final org.apache.thrift.protocol.TField USER_GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("userGroup", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ADDED_PROMOTION_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("addedPromotionRate", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField DATE_CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("dateCreated", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField USER_CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("userCreated", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DATE_MODIFIED_FIELD_DESC = new org.apache.thrift.protocol.TField("dateModified", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField USER_MODIFIED_FIELD_DESC = new org.apache.thrift.protocol.TField("userModified", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TUserPromotionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TUserPromotionTupleSchemeFactory());
  }

  /**
   * 
   * @see com.bliss.service.thrift.EUserGroup
   */
  public com.bliss.service.thrift.EUserGroup userGroup; // required
  public int addedPromotionRate; // required
  public long dateCreated; // required
  public String userCreated; // required
  public long dateModified; // required
  public String userModified; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see com.bliss.service.thrift.EUserGroup
     */
    USER_GROUP((short)1, "userGroup"),
    ADDED_PROMOTION_RATE((short)2, "addedPromotionRate"),
    DATE_CREATED((short)3, "dateCreated"),
    USER_CREATED((short)4, "userCreated"),
    DATE_MODIFIED((short)5, "dateModified"),
    USER_MODIFIED((short)6, "userModified");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_GROUP
          return USER_GROUP;
        case 2: // ADDED_PROMOTION_RATE
          return ADDED_PROMOTION_RATE;
        case 3: // DATE_CREATED
          return DATE_CREATED;
        case 4: // USER_CREATED
          return USER_CREATED;
        case 5: // DATE_MODIFIED
          return DATE_MODIFIED;
        case 6: // USER_MODIFIED
          return USER_MODIFIED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ADDEDPROMOTIONRATE_ISSET_ID = 0;
  private static final int __DATECREATED_ISSET_ID = 1;
  private static final int __DATEMODIFIED_ISSET_ID = 2;
  private BitSet __isset_bit_vector = new BitSet(3);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_GROUP, new org.apache.thrift.meta_data.FieldMetaData("userGroup", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.bliss.service.thrift.EUserGroup.class)));
    tmpMap.put(_Fields.ADDED_PROMOTION_RATE, new org.apache.thrift.meta_data.FieldMetaData("addedPromotionRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DATE_CREATED, new org.apache.thrift.meta_data.FieldMetaData("dateCreated", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_CREATED, new org.apache.thrift.meta_data.FieldMetaData("userCreated", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_MODIFIED, new org.apache.thrift.meta_data.FieldMetaData("dateModified", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_MODIFIED, new org.apache.thrift.meta_data.FieldMetaData("userModified", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TUserPromotion.class, metaDataMap);
  }

  public TUserPromotion() {
  }

  public TUserPromotion(
    com.bliss.service.thrift.EUserGroup userGroup,
    int addedPromotionRate,
    long dateCreated,
    String userCreated,
    long dateModified,
    String userModified)
  {
    this();
    this.userGroup = userGroup;
    this.addedPromotionRate = addedPromotionRate;
    setAddedPromotionRateIsSet(true);
    this.dateCreated = dateCreated;
    setDateCreatedIsSet(true);
    this.userCreated = userCreated;
    this.dateModified = dateModified;
    setDateModifiedIsSet(true);
    this.userModified = userModified;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TUserPromotion(TUserPromotion other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetUserGroup()) {
      this.userGroup = other.userGroup;
    }
    this.addedPromotionRate = other.addedPromotionRate;
    this.dateCreated = other.dateCreated;
    if (other.isSetUserCreated()) {
      this.userCreated = other.userCreated;
    }
    this.dateModified = other.dateModified;
    if (other.isSetUserModified()) {
      this.userModified = other.userModified;
    }
  }

  public TUserPromotion deepCopy() {
    return new TUserPromotion(this);
  }

  @Override
  public void clear() {
    this.userGroup = null;
    setAddedPromotionRateIsSet(false);
    this.addedPromotionRate = 0;
    setDateCreatedIsSet(false);
    this.dateCreated = 0;
    this.userCreated = null;
    setDateModifiedIsSet(false);
    this.dateModified = 0;
    this.userModified = null;
  }

  /**
   * 
   * @see com.bliss.service.thrift.EUserGroup
   */
  public com.bliss.service.thrift.EUserGroup getUserGroup() {
    return this.userGroup;
  }

  /**
   * 
   * @see com.bliss.service.thrift.EUserGroup
   */
  public TUserPromotion setUserGroup(com.bliss.service.thrift.EUserGroup userGroup) {
    this.userGroup = userGroup;
    return this;
  }

  public void unsetUserGroup() {
    this.userGroup = null;
  }

  /** Returns true if field userGroup is set (has been assigned a value) and false otherwise */
  public boolean isSetUserGroup() {
    return this.userGroup != null;
  }

  public void setUserGroupIsSet(boolean value) {
    if (!value) {
      this.userGroup = null;
    }
  }

  public int getAddedPromotionRate() {
    return this.addedPromotionRate;
  }

  public TUserPromotion setAddedPromotionRate(int addedPromotionRate) {
    this.addedPromotionRate = addedPromotionRate;
    setAddedPromotionRateIsSet(true);
    return this;
  }

  public void unsetAddedPromotionRate() {
    __isset_bit_vector.clear(__ADDEDPROMOTIONRATE_ISSET_ID);
  }

  /** Returns true if field addedPromotionRate is set (has been assigned a value) and false otherwise */
  public boolean isSetAddedPromotionRate() {
    return __isset_bit_vector.get(__ADDEDPROMOTIONRATE_ISSET_ID);
  }

  public void setAddedPromotionRateIsSet(boolean value) {
    __isset_bit_vector.set(__ADDEDPROMOTIONRATE_ISSET_ID, value);
  }

  public long getDateCreated() {
    return this.dateCreated;
  }

  public TUserPromotion setDateCreated(long dateCreated) {
    this.dateCreated = dateCreated;
    setDateCreatedIsSet(true);
    return this;
  }

  public void unsetDateCreated() {
    __isset_bit_vector.clear(__DATECREATED_ISSET_ID);
  }

  /** Returns true if field dateCreated is set (has been assigned a value) and false otherwise */
  public boolean isSetDateCreated() {
    return __isset_bit_vector.get(__DATECREATED_ISSET_ID);
  }

  public void setDateCreatedIsSet(boolean value) {
    __isset_bit_vector.set(__DATECREATED_ISSET_ID, value);
  }

  public String getUserCreated() {
    return this.userCreated;
  }

  public TUserPromotion setUserCreated(String userCreated) {
    this.userCreated = userCreated;
    return this;
  }

  public void unsetUserCreated() {
    this.userCreated = null;
  }

  /** Returns true if field userCreated is set (has been assigned a value) and false otherwise */
  public boolean isSetUserCreated() {
    return this.userCreated != null;
  }

  public void setUserCreatedIsSet(boolean value) {
    if (!value) {
      this.userCreated = null;
    }
  }

  public long getDateModified() {
    return this.dateModified;
  }

  public TUserPromotion setDateModified(long dateModified) {
    this.dateModified = dateModified;
    setDateModifiedIsSet(true);
    return this;
  }

  public void unsetDateModified() {
    __isset_bit_vector.clear(__DATEMODIFIED_ISSET_ID);
  }

  /** Returns true if field dateModified is set (has been assigned a value) and false otherwise */
  public boolean isSetDateModified() {
    return __isset_bit_vector.get(__DATEMODIFIED_ISSET_ID);
  }

  public void setDateModifiedIsSet(boolean value) {
    __isset_bit_vector.set(__DATEMODIFIED_ISSET_ID, value);
  }

  public String getUserModified() {
    return this.userModified;
  }

  public TUserPromotion setUserModified(String userModified) {
    this.userModified = userModified;
    return this;
  }

  public void unsetUserModified() {
    this.userModified = null;
  }

  /** Returns true if field userModified is set (has been assigned a value) and false otherwise */
  public boolean isSetUserModified() {
    return this.userModified != null;
  }

  public void setUserModifiedIsSet(boolean value) {
    if (!value) {
      this.userModified = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER_GROUP:
      if (value == null) {
        unsetUserGroup();
      } else {
        setUserGroup((com.bliss.service.thrift.EUserGroup)value);
      }
      break;

    case ADDED_PROMOTION_RATE:
      if (value == null) {
        unsetAddedPromotionRate();
      } else {
        setAddedPromotionRate((Integer)value);
      }
      break;

    case DATE_CREATED:
      if (value == null) {
        unsetDateCreated();
      } else {
        setDateCreated((Long)value);
      }
      break;

    case USER_CREATED:
      if (value == null) {
        unsetUserCreated();
      } else {
        setUserCreated((String)value);
      }
      break;

    case DATE_MODIFIED:
      if (value == null) {
        unsetDateModified();
      } else {
        setDateModified((Long)value);
      }
      break;

    case USER_MODIFIED:
      if (value == null) {
        unsetUserModified();
      } else {
        setUserModified((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_GROUP:
      return getUserGroup();

    case ADDED_PROMOTION_RATE:
      return Integer.valueOf(getAddedPromotionRate());

    case DATE_CREATED:
      return Long.valueOf(getDateCreated());

    case USER_CREATED:
      return getUserCreated();

    case DATE_MODIFIED:
      return Long.valueOf(getDateModified());

    case USER_MODIFIED:
      return getUserModified();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER_GROUP:
      return isSetUserGroup();
    case ADDED_PROMOTION_RATE:
      return isSetAddedPromotionRate();
    case DATE_CREATED:
      return isSetDateCreated();
    case USER_CREATED:
      return isSetUserCreated();
    case DATE_MODIFIED:
      return isSetDateModified();
    case USER_MODIFIED:
      return isSetUserModified();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TUserPromotion)
      return this.equals((TUserPromotion)that);
    return false;
  }

  public boolean equals(TUserPromotion that) {
    if (that == null)
      return false;

    boolean this_present_userGroup = true && this.isSetUserGroup();
    boolean that_present_userGroup = true && that.isSetUserGroup();
    if (this_present_userGroup || that_present_userGroup) {
      if (!(this_present_userGroup && that_present_userGroup))
        return false;
      if (!this.userGroup.equals(that.userGroup))
        return false;
    }

    boolean this_present_addedPromotionRate = true;
    boolean that_present_addedPromotionRate = true;
    if (this_present_addedPromotionRate || that_present_addedPromotionRate) {
      if (!(this_present_addedPromotionRate && that_present_addedPromotionRate))
        return false;
      if (this.addedPromotionRate != that.addedPromotionRate)
        return false;
    }

    boolean this_present_dateCreated = true;
    boolean that_present_dateCreated = true;
    if (this_present_dateCreated || that_present_dateCreated) {
      if (!(this_present_dateCreated && that_present_dateCreated))
        return false;
      if (this.dateCreated != that.dateCreated)
        return false;
    }

    boolean this_present_userCreated = true && this.isSetUserCreated();
    boolean that_present_userCreated = true && that.isSetUserCreated();
    if (this_present_userCreated || that_present_userCreated) {
      if (!(this_present_userCreated && that_present_userCreated))
        return false;
      if (!this.userCreated.equals(that.userCreated))
        return false;
    }

    boolean this_present_dateModified = true;
    boolean that_present_dateModified = true;
    if (this_present_dateModified || that_present_dateModified) {
      if (!(this_present_dateModified && that_present_dateModified))
        return false;
      if (this.dateModified != that.dateModified)
        return false;
    }

    boolean this_present_userModified = true && this.isSetUserModified();
    boolean that_present_userModified = true && that.isSetUserModified();
    if (this_present_userModified || that_present_userModified) {
      if (!(this_present_userModified && that_present_userModified))
        return false;
      if (!this.userModified.equals(that.userModified))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TUserPromotion other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TUserPromotion typedOther = (TUserPromotion)other;

    lastComparison = Boolean.valueOf(isSetUserGroup()).compareTo(typedOther.isSetUserGroup());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserGroup()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userGroup, typedOther.userGroup);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddedPromotionRate()).compareTo(typedOther.isSetAddedPromotionRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddedPromotionRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addedPromotionRate, typedOther.addedPromotionRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateCreated()).compareTo(typedOther.isSetDateCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateCreated, typedOther.dateCreated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserCreated()).compareTo(typedOther.isSetUserCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userCreated, typedOther.userCreated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateModified()).compareTo(typedOther.isSetDateModified());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateModified()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateModified, typedOther.dateModified);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserModified()).compareTo(typedOther.isSetUserModified());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserModified()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userModified, typedOther.userModified);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TUserPromotion(");
    boolean first = true;

    sb.append("userGroup:");
    if (this.userGroup == null) {
      sb.append("null");
    } else {
      sb.append(this.userGroup);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addedPromotionRate:");
    sb.append(this.addedPromotionRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateCreated:");
    sb.append(this.dateCreated);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userCreated:");
    if (this.userCreated == null) {
      sb.append("null");
    } else {
      sb.append(this.userCreated);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateModified:");
    sb.append(this.dateModified);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userModified:");
    if (this.userModified == null) {
      sb.append("null");
    } else {
      sb.append(this.userModified);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TUserPromotionStandardSchemeFactory implements SchemeFactory {
    public TUserPromotionStandardScheme getScheme() {
      return new TUserPromotionStandardScheme();
    }
  }

  private static class TUserPromotionStandardScheme extends StandardScheme<TUserPromotion> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TUserPromotion struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userGroup = com.bliss.service.thrift.EUserGroup.findByValue(iprot.readI32());
              struct.setUserGroupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ADDED_PROMOTION_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.addedPromotionRate = iprot.readI32();
              struct.setAddedPromotionRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATE_CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dateCreated = iprot.readI64();
              struct.setDateCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // USER_CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userCreated = iprot.readString();
              struct.setUserCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DATE_MODIFIED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dateModified = iprot.readI64();
              struct.setDateModifiedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USER_MODIFIED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userModified = iprot.readString();
              struct.setUserModifiedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TUserPromotion struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.userGroup != null) {
        oprot.writeFieldBegin(USER_GROUP_FIELD_DESC);
        oprot.writeI32(struct.userGroup.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ADDED_PROMOTION_RATE_FIELD_DESC);
      oprot.writeI32(struct.addedPromotionRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DATE_CREATED_FIELD_DESC);
      oprot.writeI64(struct.dateCreated);
      oprot.writeFieldEnd();
      if (struct.userCreated != null) {
        oprot.writeFieldBegin(USER_CREATED_FIELD_DESC);
        oprot.writeString(struct.userCreated);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DATE_MODIFIED_FIELD_DESC);
      oprot.writeI64(struct.dateModified);
      oprot.writeFieldEnd();
      if (struct.userModified != null) {
        oprot.writeFieldBegin(USER_MODIFIED_FIELD_DESC);
        oprot.writeString(struct.userModified);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TUserPromotionTupleSchemeFactory implements SchemeFactory {
    public TUserPromotionTupleScheme getScheme() {
      return new TUserPromotionTupleScheme();
    }
  }

  private static class TUserPromotionTupleScheme extends TupleScheme<TUserPromotion> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TUserPromotion struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetUserGroup()) {
        optionals.set(0);
      }
      if (struct.isSetAddedPromotionRate()) {
        optionals.set(1);
      }
      if (struct.isSetDateCreated()) {
        optionals.set(2);
      }
      if (struct.isSetUserCreated()) {
        optionals.set(3);
      }
      if (struct.isSetDateModified()) {
        optionals.set(4);
      }
      if (struct.isSetUserModified()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetUserGroup()) {
        oprot.writeI32(struct.userGroup.getValue());
      }
      if (struct.isSetAddedPromotionRate()) {
        oprot.writeI32(struct.addedPromotionRate);
      }
      if (struct.isSetDateCreated()) {
        oprot.writeI64(struct.dateCreated);
      }
      if (struct.isSetUserCreated()) {
        oprot.writeString(struct.userCreated);
      }
      if (struct.isSetDateModified()) {
        oprot.writeI64(struct.dateModified);
      }
      if (struct.isSetUserModified()) {
        oprot.writeString(struct.userModified);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TUserPromotion struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.userGroup = com.bliss.service.thrift.EUserGroup.findByValue(iprot.readI32());
        struct.setUserGroupIsSet(true);
      }
      if (incoming.get(1)) {
        struct.addedPromotionRate = iprot.readI32();
        struct.setAddedPromotionRateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dateCreated = iprot.readI64();
        struct.setDateCreatedIsSet(true);
      }
      if (incoming.get(3)) {
        struct.userCreated = iprot.readString();
        struct.setUserCreatedIsSet(true);
      }
      if (incoming.get(4)) {
        struct.dateModified = iprot.readI64();
        struct.setDateModifiedIsSet(true);
      }
      if (incoming.get(5)) {
        struct.userModified = iprot.readString();
        struct.setUserModifiedIsSet(true);
      }
    }
  }

}

