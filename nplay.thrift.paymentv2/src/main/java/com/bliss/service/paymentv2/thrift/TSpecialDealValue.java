/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bliss.service.paymentv2.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TSpecialDealValue implements org.apache.thrift.TBase<TSpecialDealValue, TSpecialDealValue._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TSpecialDealValue");

  private static final org.apache.thrift.protocol.TField SPECIAL_DEAL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("specialDealId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROMOTION_RATE_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("promotionRateData", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CAMPAIGN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("campaignName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CURRENT_NCOIN_FIELD_DESC = new org.apache.thrift.protocol.TField("currentNCoin", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PURCHASED_FIELD_DESC = new org.apache.thrift.protocol.TField("purchased", org.apache.thrift.protocol.TType.BYTE, (short)9);
  private static final org.apache.thrift.protocol.TField DATE_BEGIN_FIELD_DESC = new org.apache.thrift.protocol.TField("dateBegin", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField DATE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("dateEnd", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField DATE_CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("dateCreated", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField USER_CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("userCreated", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField DATE_MODIFIED_FIELD_DESC = new org.apache.thrift.protocol.TField("dateModified", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField USER_MODIFIED_FIELD_DESC = new org.apache.thrift.protocol.TField("userModified", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TSpecialDealValueStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TSpecialDealValueTupleSchemeFactory());
  }

  public long specialDealId; // required
  public long userId; // required
  public String userName; // required
  public String promotionRateData; // required
  public String campaignName; // required
  public long currentNCoin; // required
  public String description; // required
  /**
   * 
   * @see EStatus
   */
  public EStatus status; // required
  public byte purchased; // required
  public long dateBegin; // required
  public long dateEnd; // required
  public long dateCreated; // required
  public String userCreated; // required
  public long dateModified; // required
  public String userModified; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SPECIAL_DEAL_ID((short)1, "specialDealId"),
    USER_ID((short)2, "userId"),
    USER_NAME((short)3, "userName"),
    PROMOTION_RATE_DATA((short)4, "promotionRateData"),
    CAMPAIGN_NAME((short)5, "campaignName"),
    CURRENT_NCOIN((short)6, "currentNCoin"),
    DESCRIPTION((short)7, "description"),
    /**
     * 
     * @see EStatus
     */
    STATUS((short)8, "status"),
    PURCHASED((short)9, "purchased"),
    DATE_BEGIN((short)10, "dateBegin"),
    DATE_END((short)11, "dateEnd"),
    DATE_CREATED((short)12, "dateCreated"),
    USER_CREATED((short)13, "userCreated"),
    DATE_MODIFIED((short)14, "dateModified"),
    USER_MODIFIED((short)15, "userModified");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SPECIAL_DEAL_ID
          return SPECIAL_DEAL_ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // USER_NAME
          return USER_NAME;
        case 4: // PROMOTION_RATE_DATA
          return PROMOTION_RATE_DATA;
        case 5: // CAMPAIGN_NAME
          return CAMPAIGN_NAME;
        case 6: // CURRENT_NCOIN
          return CURRENT_NCOIN;
        case 7: // DESCRIPTION
          return DESCRIPTION;
        case 8: // STATUS
          return STATUS;
        case 9: // PURCHASED
          return PURCHASED;
        case 10: // DATE_BEGIN
          return DATE_BEGIN;
        case 11: // DATE_END
          return DATE_END;
        case 12: // DATE_CREATED
          return DATE_CREATED;
        case 13: // USER_CREATED
          return USER_CREATED;
        case 14: // DATE_MODIFIED
          return DATE_MODIFIED;
        case 15: // USER_MODIFIED
          return USER_MODIFIED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SPECIALDEALID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __CURRENTNCOIN_ISSET_ID = 2;
  private static final int __PURCHASED_ISSET_ID = 3;
  private static final int __DATEBEGIN_ISSET_ID = 4;
  private static final int __DATEEND_ISSET_ID = 5;
  private static final int __DATECREATED_ISSET_ID = 6;
  private static final int __DATEMODIFIED_ISSET_ID = 7;
  private BitSet __isset_bit_vector = new BitSet(8);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SPECIAL_DEAL_ID, new org.apache.thrift.meta_data.FieldMetaData("specialDealId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROMOTION_RATE_DATA, new org.apache.thrift.meta_data.FieldMetaData("promotionRateData", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CAMPAIGN_NAME, new org.apache.thrift.meta_data.FieldMetaData("campaignName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENT_NCOIN, new org.apache.thrift.meta_data.FieldMetaData("currentNCoin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, EStatus.class)));
    tmpMap.put(_Fields.PURCHASED, new org.apache.thrift.meta_data.FieldMetaData("purchased", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.DATE_BEGIN, new org.apache.thrift.meta_data.FieldMetaData("dateBegin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DATE_END, new org.apache.thrift.meta_data.FieldMetaData("dateEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DATE_CREATED, new org.apache.thrift.meta_data.FieldMetaData("dateCreated", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_CREATED, new org.apache.thrift.meta_data.FieldMetaData("userCreated", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_MODIFIED, new org.apache.thrift.meta_data.FieldMetaData("dateModified", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_MODIFIED, new org.apache.thrift.meta_data.FieldMetaData("userModified", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TSpecialDealValue.class, metaDataMap);
  }

  public TSpecialDealValue() {
  }

  public TSpecialDealValue(
    long specialDealId,
    long userId,
    String userName,
    String promotionRateData,
    String campaignName,
    long currentNCoin,
    String description,
    EStatus status,
    byte purchased,
    long dateBegin,
    long dateEnd,
    long dateCreated,
    String userCreated,
    long dateModified,
    String userModified)
  {
    this();
    this.specialDealId = specialDealId;
    setSpecialDealIdIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.userName = userName;
    this.promotionRateData = promotionRateData;
    this.campaignName = campaignName;
    this.currentNCoin = currentNCoin;
    setCurrentNCoinIsSet(true);
    this.description = description;
    this.status = status;
    this.purchased = purchased;
    setPurchasedIsSet(true);
    this.dateBegin = dateBegin;
    setDateBeginIsSet(true);
    this.dateEnd = dateEnd;
    setDateEndIsSet(true);
    this.dateCreated = dateCreated;
    setDateCreatedIsSet(true);
    this.userCreated = userCreated;
    this.dateModified = dateModified;
    setDateModifiedIsSet(true);
    this.userModified = userModified;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TSpecialDealValue(TSpecialDealValue other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.specialDealId = other.specialDealId;
    this.userId = other.userId;
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetPromotionRateData()) {
      this.promotionRateData = other.promotionRateData;
    }
    if (other.isSetCampaignName()) {
      this.campaignName = other.campaignName;
    }
    this.currentNCoin = other.currentNCoin;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    this.purchased = other.purchased;
    this.dateBegin = other.dateBegin;
    this.dateEnd = other.dateEnd;
    this.dateCreated = other.dateCreated;
    if (other.isSetUserCreated()) {
      this.userCreated = other.userCreated;
    }
    this.dateModified = other.dateModified;
    if (other.isSetUserModified()) {
      this.userModified = other.userModified;
    }
  }

  public TSpecialDealValue deepCopy() {
    return new TSpecialDealValue(this);
  }

  @Override
  public void clear() {
    setSpecialDealIdIsSet(false);
    this.specialDealId = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.userName = null;
    this.promotionRateData = null;
    this.campaignName = null;
    setCurrentNCoinIsSet(false);
    this.currentNCoin = 0;
    this.description = null;
    this.status = null;
    setPurchasedIsSet(false);
    this.purchased = 0;
    setDateBeginIsSet(false);
    this.dateBegin = 0;
    setDateEndIsSet(false);
    this.dateEnd = 0;
    setDateCreatedIsSet(false);
    this.dateCreated = 0;
    this.userCreated = null;
    setDateModifiedIsSet(false);
    this.dateModified = 0;
    this.userModified = null;
  }

  public long getSpecialDealId() {
    return this.specialDealId;
  }

  public TSpecialDealValue setSpecialDealId(long specialDealId) {
    this.specialDealId = specialDealId;
    setSpecialDealIdIsSet(true);
    return this;
  }

  public void unsetSpecialDealId() {
    __isset_bit_vector.clear(__SPECIALDEALID_ISSET_ID);
  }

  /** Returns true if field specialDealId is set (has been assigned a value) and false otherwise */
  public boolean isSetSpecialDealId() {
    return __isset_bit_vector.get(__SPECIALDEALID_ISSET_ID);
  }

  public void setSpecialDealIdIsSet(boolean value) {
    __isset_bit_vector.set(__SPECIALDEALID_ISSET_ID, value);
  }

  public long getUserId() {
    return this.userId;
  }

  public TSpecialDealValue setUserId(long userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public String getUserName() {
    return this.userName;
  }

  public TSpecialDealValue setUserName(String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public String getPromotionRateData() {
    return this.promotionRateData;
  }

  public TSpecialDealValue setPromotionRateData(String promotionRateData) {
    this.promotionRateData = promotionRateData;
    return this;
  }

  public void unsetPromotionRateData() {
    this.promotionRateData = null;
  }

  /** Returns true if field promotionRateData is set (has been assigned a value) and false otherwise */
  public boolean isSetPromotionRateData() {
    return this.promotionRateData != null;
  }

  public void setPromotionRateDataIsSet(boolean value) {
    if (!value) {
      this.promotionRateData = null;
    }
  }

  public String getCampaignName() {
    return this.campaignName;
  }

  public TSpecialDealValue setCampaignName(String campaignName) {
    this.campaignName = campaignName;
    return this;
  }

  public void unsetCampaignName() {
    this.campaignName = null;
  }

  /** Returns true if field campaignName is set (has been assigned a value) and false otherwise */
  public boolean isSetCampaignName() {
    return this.campaignName != null;
  }

  public void setCampaignNameIsSet(boolean value) {
    if (!value) {
      this.campaignName = null;
    }
  }

  public long getCurrentNCoin() {
    return this.currentNCoin;
  }

  public TSpecialDealValue setCurrentNCoin(long currentNCoin) {
    this.currentNCoin = currentNCoin;
    setCurrentNCoinIsSet(true);
    return this;
  }

  public void unsetCurrentNCoin() {
    __isset_bit_vector.clear(__CURRENTNCOIN_ISSET_ID);
  }

  /** Returns true if field currentNCoin is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentNCoin() {
    return __isset_bit_vector.get(__CURRENTNCOIN_ISSET_ID);
  }

  public void setCurrentNCoinIsSet(boolean value) {
    __isset_bit_vector.set(__CURRENTNCOIN_ISSET_ID, value);
  }

  public String getDescription() {
    return this.description;
  }

  public TSpecialDealValue setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  /**
   * 
   * @see EStatus
   */
  public EStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see EStatus
   */
  public TSpecialDealValue setStatus(EStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public byte getPurchased() {
    return this.purchased;
  }

  public TSpecialDealValue setPurchased(byte purchased) {
    this.purchased = purchased;
    setPurchasedIsSet(true);
    return this;
  }

  public void unsetPurchased() {
    __isset_bit_vector.clear(__PURCHASED_ISSET_ID);
  }

  /** Returns true if field purchased is set (has been assigned a value) and false otherwise */
  public boolean isSetPurchased() {
    return __isset_bit_vector.get(__PURCHASED_ISSET_ID);
  }

  public void setPurchasedIsSet(boolean value) {
    __isset_bit_vector.set(__PURCHASED_ISSET_ID, value);
  }

  public long getDateBegin() {
    return this.dateBegin;
  }

  public TSpecialDealValue setDateBegin(long dateBegin) {
    this.dateBegin = dateBegin;
    setDateBeginIsSet(true);
    return this;
  }

  public void unsetDateBegin() {
    __isset_bit_vector.clear(__DATEBEGIN_ISSET_ID);
  }

  /** Returns true if field dateBegin is set (has been assigned a value) and false otherwise */
  public boolean isSetDateBegin() {
    return __isset_bit_vector.get(__DATEBEGIN_ISSET_ID);
  }

  public void setDateBeginIsSet(boolean value) {
    __isset_bit_vector.set(__DATEBEGIN_ISSET_ID, value);
  }

  public long getDateEnd() {
    return this.dateEnd;
  }

  public TSpecialDealValue setDateEnd(long dateEnd) {
    this.dateEnd = dateEnd;
    setDateEndIsSet(true);
    return this;
  }

  public void unsetDateEnd() {
    __isset_bit_vector.clear(__DATEEND_ISSET_ID);
  }

  /** Returns true if field dateEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetDateEnd() {
    return __isset_bit_vector.get(__DATEEND_ISSET_ID);
  }

  public void setDateEndIsSet(boolean value) {
    __isset_bit_vector.set(__DATEEND_ISSET_ID, value);
  }

  public long getDateCreated() {
    return this.dateCreated;
  }

  public TSpecialDealValue setDateCreated(long dateCreated) {
    this.dateCreated = dateCreated;
    setDateCreatedIsSet(true);
    return this;
  }

  public void unsetDateCreated() {
    __isset_bit_vector.clear(__DATECREATED_ISSET_ID);
  }

  /** Returns true if field dateCreated is set (has been assigned a value) and false otherwise */
  public boolean isSetDateCreated() {
    return __isset_bit_vector.get(__DATECREATED_ISSET_ID);
  }

  public void setDateCreatedIsSet(boolean value) {
    __isset_bit_vector.set(__DATECREATED_ISSET_ID, value);
  }

  public String getUserCreated() {
    return this.userCreated;
  }

  public TSpecialDealValue setUserCreated(String userCreated) {
    this.userCreated = userCreated;
    return this;
  }

  public void unsetUserCreated() {
    this.userCreated = null;
  }

  /** Returns true if field userCreated is set (has been assigned a value) and false otherwise */
  public boolean isSetUserCreated() {
    return this.userCreated != null;
  }

  public void setUserCreatedIsSet(boolean value) {
    if (!value) {
      this.userCreated = null;
    }
  }

  public long getDateModified() {
    return this.dateModified;
  }

  public TSpecialDealValue setDateModified(long dateModified) {
    this.dateModified = dateModified;
    setDateModifiedIsSet(true);
    return this;
  }

  public void unsetDateModified() {
    __isset_bit_vector.clear(__DATEMODIFIED_ISSET_ID);
  }

  /** Returns true if field dateModified is set (has been assigned a value) and false otherwise */
  public boolean isSetDateModified() {
    return __isset_bit_vector.get(__DATEMODIFIED_ISSET_ID);
  }

  public void setDateModifiedIsSet(boolean value) {
    __isset_bit_vector.set(__DATEMODIFIED_ISSET_ID, value);
  }

  public String getUserModified() {
    return this.userModified;
  }

  public TSpecialDealValue setUserModified(String userModified) {
    this.userModified = userModified;
    return this;
  }

  public void unsetUserModified() {
    this.userModified = null;
  }

  /** Returns true if field userModified is set (has been assigned a value) and false otherwise */
  public boolean isSetUserModified() {
    return this.userModified != null;
  }

  public void setUserModifiedIsSet(boolean value) {
    if (!value) {
      this.userModified = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SPECIAL_DEAL_ID:
      if (value == null) {
        unsetSpecialDealId();
      } else {
        setSpecialDealId((Long)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Long)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case PROMOTION_RATE_DATA:
      if (value == null) {
        unsetPromotionRateData();
      } else {
        setPromotionRateData((String)value);
      }
      break;

    case CAMPAIGN_NAME:
      if (value == null) {
        unsetCampaignName();
      } else {
        setCampaignName((String)value);
      }
      break;

    case CURRENT_NCOIN:
      if (value == null) {
        unsetCurrentNCoin();
      } else {
        setCurrentNCoin((Long)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((EStatus)value);
      }
      break;

    case PURCHASED:
      if (value == null) {
        unsetPurchased();
      } else {
        setPurchased((Byte)value);
      }
      break;

    case DATE_BEGIN:
      if (value == null) {
        unsetDateBegin();
      } else {
        setDateBegin((Long)value);
      }
      break;

    case DATE_END:
      if (value == null) {
        unsetDateEnd();
      } else {
        setDateEnd((Long)value);
      }
      break;

    case DATE_CREATED:
      if (value == null) {
        unsetDateCreated();
      } else {
        setDateCreated((Long)value);
      }
      break;

    case USER_CREATED:
      if (value == null) {
        unsetUserCreated();
      } else {
        setUserCreated((String)value);
      }
      break;

    case DATE_MODIFIED:
      if (value == null) {
        unsetDateModified();
      } else {
        setDateModified((Long)value);
      }
      break;

    case USER_MODIFIED:
      if (value == null) {
        unsetUserModified();
      } else {
        setUserModified((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SPECIAL_DEAL_ID:
      return Long.valueOf(getSpecialDealId());

    case USER_ID:
      return Long.valueOf(getUserId());

    case USER_NAME:
      return getUserName();

    case PROMOTION_RATE_DATA:
      return getPromotionRateData();

    case CAMPAIGN_NAME:
      return getCampaignName();

    case CURRENT_NCOIN:
      return Long.valueOf(getCurrentNCoin());

    case DESCRIPTION:
      return getDescription();

    case STATUS:
      return getStatus();

    case PURCHASED:
      return Byte.valueOf(getPurchased());

    case DATE_BEGIN:
      return Long.valueOf(getDateBegin());

    case DATE_END:
      return Long.valueOf(getDateEnd());

    case DATE_CREATED:
      return Long.valueOf(getDateCreated());

    case USER_CREATED:
      return getUserCreated();

    case DATE_MODIFIED:
      return Long.valueOf(getDateModified());

    case USER_MODIFIED:
      return getUserModified();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SPECIAL_DEAL_ID:
      return isSetSpecialDealId();
    case USER_ID:
      return isSetUserId();
    case USER_NAME:
      return isSetUserName();
    case PROMOTION_RATE_DATA:
      return isSetPromotionRateData();
    case CAMPAIGN_NAME:
      return isSetCampaignName();
    case CURRENT_NCOIN:
      return isSetCurrentNCoin();
    case DESCRIPTION:
      return isSetDescription();
    case STATUS:
      return isSetStatus();
    case PURCHASED:
      return isSetPurchased();
    case DATE_BEGIN:
      return isSetDateBegin();
    case DATE_END:
      return isSetDateEnd();
    case DATE_CREATED:
      return isSetDateCreated();
    case USER_CREATED:
      return isSetUserCreated();
    case DATE_MODIFIED:
      return isSetDateModified();
    case USER_MODIFIED:
      return isSetUserModified();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TSpecialDealValue)
      return this.equals((TSpecialDealValue)that);
    return false;
  }

  public boolean equals(TSpecialDealValue that) {
    if (that == null)
      return false;

    boolean this_present_specialDealId = true;
    boolean that_present_specialDealId = true;
    if (this_present_specialDealId || that_present_specialDealId) {
      if (!(this_present_specialDealId && that_present_specialDealId))
        return false;
      if (this.specialDealId != that.specialDealId)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_promotionRateData = true && this.isSetPromotionRateData();
    boolean that_present_promotionRateData = true && that.isSetPromotionRateData();
    if (this_present_promotionRateData || that_present_promotionRateData) {
      if (!(this_present_promotionRateData && that_present_promotionRateData))
        return false;
      if (!this.promotionRateData.equals(that.promotionRateData))
        return false;
    }

    boolean this_present_campaignName = true && this.isSetCampaignName();
    boolean that_present_campaignName = true && that.isSetCampaignName();
    if (this_present_campaignName || that_present_campaignName) {
      if (!(this_present_campaignName && that_present_campaignName))
        return false;
      if (!this.campaignName.equals(that.campaignName))
        return false;
    }

    boolean this_present_currentNCoin = true;
    boolean that_present_currentNCoin = true;
    if (this_present_currentNCoin || that_present_currentNCoin) {
      if (!(this_present_currentNCoin && that_present_currentNCoin))
        return false;
      if (this.currentNCoin != that.currentNCoin)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_purchased = true;
    boolean that_present_purchased = true;
    if (this_present_purchased || that_present_purchased) {
      if (!(this_present_purchased && that_present_purchased))
        return false;
      if (this.purchased != that.purchased)
        return false;
    }

    boolean this_present_dateBegin = true;
    boolean that_present_dateBegin = true;
    if (this_present_dateBegin || that_present_dateBegin) {
      if (!(this_present_dateBegin && that_present_dateBegin))
        return false;
      if (this.dateBegin != that.dateBegin)
        return false;
    }

    boolean this_present_dateEnd = true;
    boolean that_present_dateEnd = true;
    if (this_present_dateEnd || that_present_dateEnd) {
      if (!(this_present_dateEnd && that_present_dateEnd))
        return false;
      if (this.dateEnd != that.dateEnd)
        return false;
    }

    boolean this_present_dateCreated = true;
    boolean that_present_dateCreated = true;
    if (this_present_dateCreated || that_present_dateCreated) {
      if (!(this_present_dateCreated && that_present_dateCreated))
        return false;
      if (this.dateCreated != that.dateCreated)
        return false;
    }

    boolean this_present_userCreated = true && this.isSetUserCreated();
    boolean that_present_userCreated = true && that.isSetUserCreated();
    if (this_present_userCreated || that_present_userCreated) {
      if (!(this_present_userCreated && that_present_userCreated))
        return false;
      if (!this.userCreated.equals(that.userCreated))
        return false;
    }

    boolean this_present_dateModified = true;
    boolean that_present_dateModified = true;
    if (this_present_dateModified || that_present_dateModified) {
      if (!(this_present_dateModified && that_present_dateModified))
        return false;
      if (this.dateModified != that.dateModified)
        return false;
    }

    boolean this_present_userModified = true && this.isSetUserModified();
    boolean that_present_userModified = true && that.isSetUserModified();
    if (this_present_userModified || that_present_userModified) {
      if (!(this_present_userModified && that_present_userModified))
        return false;
      if (!this.userModified.equals(that.userModified))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TSpecialDealValue other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TSpecialDealValue typedOther = (TSpecialDealValue)other;

    lastComparison = Boolean.valueOf(isSetSpecialDealId()).compareTo(typedOther.isSetSpecialDealId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpecialDealId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specialDealId, typedOther.specialDealId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(typedOther.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, typedOther.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPromotionRateData()).compareTo(typedOther.isSetPromotionRateData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPromotionRateData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.promotionRateData, typedOther.promotionRateData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCampaignName()).compareTo(typedOther.isSetCampaignName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCampaignName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.campaignName, typedOther.campaignName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrentNCoin()).compareTo(typedOther.isSetCurrentNCoin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentNCoin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currentNCoin, typedOther.currentNCoin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, typedOther.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPurchased()).compareTo(typedOther.isSetPurchased());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPurchased()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.purchased, typedOther.purchased);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateBegin()).compareTo(typedOther.isSetDateBegin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateBegin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateBegin, typedOther.dateBegin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateEnd()).compareTo(typedOther.isSetDateEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateEnd, typedOther.dateEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateCreated()).compareTo(typedOther.isSetDateCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateCreated, typedOther.dateCreated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserCreated()).compareTo(typedOther.isSetUserCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userCreated, typedOther.userCreated);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateModified()).compareTo(typedOther.isSetDateModified());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateModified()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateModified, typedOther.dateModified);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserModified()).compareTo(typedOther.isSetUserModified());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserModified()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userModified, typedOther.userModified);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TSpecialDealValue(");
    boolean first = true;

    sb.append("specialDealId:");
    sb.append(this.specialDealId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("promotionRateData:");
    if (this.promotionRateData == null) {
      sb.append("null");
    } else {
      sb.append(this.promotionRateData);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("campaignName:");
    if (this.campaignName == null) {
      sb.append("null");
    } else {
      sb.append(this.campaignName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currentNCoin:");
    sb.append(this.currentNCoin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("purchased:");
    sb.append(this.purchased);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateBegin:");
    sb.append(this.dateBegin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateEnd:");
    sb.append(this.dateEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateCreated:");
    sb.append(this.dateCreated);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userCreated:");
    if (this.userCreated == null) {
      sb.append("null");
    } else {
      sb.append(this.userCreated);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateModified:");
    sb.append(this.dateModified);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userModified:");
    if (this.userModified == null) {
      sb.append("null");
    } else {
      sb.append(this.userModified);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TSpecialDealValueStandardSchemeFactory implements SchemeFactory {
    public TSpecialDealValueStandardScheme getScheme() {
      return new TSpecialDealValueStandardScheme();
    }
  }

  private static class TSpecialDealValueStandardScheme extends StandardScheme<TSpecialDealValue> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TSpecialDealValue struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SPECIAL_DEAL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.specialDealId = iprot.readI64();
              struct.setSpecialDealIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.userId = iprot.readI64();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROMOTION_RATE_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.promotionRateData = iprot.readString();
              struct.setPromotionRateDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CAMPAIGN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.campaignName = iprot.readString();
              struct.setCampaignNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CURRENT_NCOIN
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.currentNCoin = iprot.readI64();
              struct.setCurrentNCoinIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = EStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PURCHASED
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.purchased = iprot.readByte();
              struct.setPurchasedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DATE_BEGIN
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dateBegin = iprot.readI64();
              struct.setDateBeginIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DATE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dateEnd = iprot.readI64();
              struct.setDateEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DATE_CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dateCreated = iprot.readI64();
              struct.setDateCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // USER_CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userCreated = iprot.readString();
              struct.setUserCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DATE_MODIFIED
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dateModified = iprot.readI64();
              struct.setDateModifiedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // USER_MODIFIED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userModified = iprot.readString();
              struct.setUserModifiedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TSpecialDealValue struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SPECIAL_DEAL_ID_FIELD_DESC);
      oprot.writeI64(struct.specialDealId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI64(struct.userId);
      oprot.writeFieldEnd();
      if (struct.userName != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.userName);
        oprot.writeFieldEnd();
      }
      if (struct.promotionRateData != null) {
        oprot.writeFieldBegin(PROMOTION_RATE_DATA_FIELD_DESC);
        oprot.writeString(struct.promotionRateData);
        oprot.writeFieldEnd();
      }
      if (struct.campaignName != null) {
        oprot.writeFieldBegin(CAMPAIGN_NAME_FIELD_DESC);
        oprot.writeString(struct.campaignName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CURRENT_NCOIN_FIELD_DESC);
      oprot.writeI64(struct.currentNCoin);
      oprot.writeFieldEnd();
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PURCHASED_FIELD_DESC);
      oprot.writeByte(struct.purchased);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DATE_BEGIN_FIELD_DESC);
      oprot.writeI64(struct.dateBegin);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DATE_END_FIELD_DESC);
      oprot.writeI64(struct.dateEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DATE_CREATED_FIELD_DESC);
      oprot.writeI64(struct.dateCreated);
      oprot.writeFieldEnd();
      if (struct.userCreated != null) {
        oprot.writeFieldBegin(USER_CREATED_FIELD_DESC);
        oprot.writeString(struct.userCreated);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DATE_MODIFIED_FIELD_DESC);
      oprot.writeI64(struct.dateModified);
      oprot.writeFieldEnd();
      if (struct.userModified != null) {
        oprot.writeFieldBegin(USER_MODIFIED_FIELD_DESC);
        oprot.writeString(struct.userModified);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TSpecialDealValueTupleSchemeFactory implements SchemeFactory {
    public TSpecialDealValueTupleScheme getScheme() {
      return new TSpecialDealValueTupleScheme();
    }
  }

  private static class TSpecialDealValueTupleScheme extends TupleScheme<TSpecialDealValue> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TSpecialDealValue struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetSpecialDealId()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetUserName()) {
        optionals.set(2);
      }
      if (struct.isSetPromotionRateData()) {
        optionals.set(3);
      }
      if (struct.isSetCampaignName()) {
        optionals.set(4);
      }
      if (struct.isSetCurrentNCoin()) {
        optionals.set(5);
      }
      if (struct.isSetDescription()) {
        optionals.set(6);
      }
      if (struct.isSetStatus()) {
        optionals.set(7);
      }
      if (struct.isSetPurchased()) {
        optionals.set(8);
      }
      if (struct.isSetDateBegin()) {
        optionals.set(9);
      }
      if (struct.isSetDateEnd()) {
        optionals.set(10);
      }
      if (struct.isSetDateCreated()) {
        optionals.set(11);
      }
      if (struct.isSetUserCreated()) {
        optionals.set(12);
      }
      if (struct.isSetDateModified()) {
        optionals.set(13);
      }
      if (struct.isSetUserModified()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetSpecialDealId()) {
        oprot.writeI64(struct.specialDealId);
      }
      if (struct.isSetUserId()) {
        oprot.writeI64(struct.userId);
      }
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetPromotionRateData()) {
        oprot.writeString(struct.promotionRateData);
      }
      if (struct.isSetCampaignName()) {
        oprot.writeString(struct.campaignName);
      }
      if (struct.isSetCurrentNCoin()) {
        oprot.writeI64(struct.currentNCoin);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetPurchased()) {
        oprot.writeByte(struct.purchased);
      }
      if (struct.isSetDateBegin()) {
        oprot.writeI64(struct.dateBegin);
      }
      if (struct.isSetDateEnd()) {
        oprot.writeI64(struct.dateEnd);
      }
      if (struct.isSetDateCreated()) {
        oprot.writeI64(struct.dateCreated);
      }
      if (struct.isSetUserCreated()) {
        oprot.writeString(struct.userCreated);
      }
      if (struct.isSetDateModified()) {
        oprot.writeI64(struct.dateModified);
      }
      if (struct.isSetUserModified()) {
        oprot.writeString(struct.userModified);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TSpecialDealValue struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.specialDealId = iprot.readI64();
        struct.setSpecialDealIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI64();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.promotionRateData = iprot.readString();
        struct.setPromotionRateDataIsSet(true);
      }
      if (incoming.get(4)) {
        struct.campaignName = iprot.readString();
        struct.setCampaignNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.currentNCoin = iprot.readI64();
        struct.setCurrentNCoinIsSet(true);
      }
      if (incoming.get(6)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.status = EStatus.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.purchased = iprot.readByte();
        struct.setPurchasedIsSet(true);
      }
      if (incoming.get(9)) {
        struct.dateBegin = iprot.readI64();
        struct.setDateBeginIsSet(true);
      }
      if (incoming.get(10)) {
        struct.dateEnd = iprot.readI64();
        struct.setDateEndIsSet(true);
      }
      if (incoming.get(11)) {
        struct.dateCreated = iprot.readI64();
        struct.setDateCreatedIsSet(true);
      }
      if (incoming.get(12)) {
        struct.userCreated = iprot.readString();
        struct.setUserCreatedIsSet(true);
      }
      if (incoming.get(13)) {
        struct.dateModified = iprot.readI64();
        struct.setDateModifiedIsSet(true);
      }
      if (incoming.get(14)) {
        struct.userModified = iprot.readString();
        struct.setUserModifiedIsSet(true);
      }
    }
  }

}

