/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bliss.service.paymentv2.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TInvoiceValue implements org.apache.thrift.TBase<TInvoiceValue, TInvoiceValue._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TInvoiceValue");

  private static final org.apache.thrift.protocol.TField INVOICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("invoiceId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField USER_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("userIp", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField USER_GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("userGroup", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField SOURCE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MARKETING_CAMPAIGN_FIELD_DESC = new org.apache.thrift.protocol.TField("marketingCampaign", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField APP_PACKAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appPackageId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField APP_PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("appPlatform", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField N_COIN_BEFORE_FIELD_DESC = new org.apache.thrift.protocol.TField("nCoinBefore", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField USER_RETENTION_FIELD_DESC = new org.apache.thrift.protocol.TField("userRetention", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField PRODUCT_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("productKey", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PRODUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("productType", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("amount", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField N_COIN_PAID_FIELD_DESC = new org.apache.thrift.protocol.TField("nCoinPaid", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField REF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("refId", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField PROMOTION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("promotionType", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField PROMOTION_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("promotionRate", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField N_COIN_PROMOTION_FIELD_DESC = new org.apache.thrift.protocol.TField("nCoinPromotion", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField LOCAL_CAMPAIGN_FIELD_DESC = new org.apache.thrift.protocol.TField("localCampaign", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BYTE, (short)22);
  private static final org.apache.thrift.protocol.TField DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("data", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField PARTNER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerId", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField PARTNER_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerStatus", org.apache.thrift.protocol.TType.BYTE, (short)25);
  private static final org.apache.thrift.protocol.TField PURCHASED_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("purchasedDate", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField COMPLETED_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("completedDate", org.apache.thrift.protocol.TType.I64, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TInvoiceValueStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TInvoiceValueTupleSchemeFactory());
  }

  public long invoiceId; // required
  public long userId; // required
  public String userName; // required
  public String userIp; // required
  /**
   * 
   * @see com.bliss.service.thrift.EUserGroup
   */
  public com.bliss.service.thrift.EUserGroup userGroup; // required
  public String sourceName; // required
  public String marketingCampaign; // required
  public String appPackageId; // required
  public String appPlatform; // required
  public long nCoinBefore; // required
  public long userRetention; // required
  public int productId; // required
  public String productKey; // required
  /**
   * 
   * @see EProductType
   */
  public EProductType productType; // required
  public int amount; // required
  public long nCoinPaid; // required
  public long refId; // required
  /**
   * 
   * @see EPromotionType
   */
  public EPromotionType promotionType; // required
  public int promotionRate; // required
  public long nCoinPromotion; // required
  public String localCampaign; // required
  public byte status; // required
  public String data; // required
  public String partnerId; // required
  public byte partnerStatus; // required
  public long purchasedDate; // required
  public long completedDate; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    INVOICE_ID((short)1, "invoiceId"),
    USER_ID((short)2, "userId"),
    USER_NAME((short)3, "userName"),
    USER_IP((short)4, "userIp"),
    /**
     * 
     * @see com.bliss.service.thrift.EUserGroup
     */
    USER_GROUP((short)5, "userGroup"),
    SOURCE_NAME((short)6, "sourceName"),
    MARKETING_CAMPAIGN((short)7, "marketingCampaign"),
    APP_PACKAGE_ID((short)8, "appPackageId"),
    APP_PLATFORM((short)9, "appPlatform"),
    N_COIN_BEFORE((short)10, "nCoinBefore"),
    USER_RETENTION((short)11, "userRetention"),
    PRODUCT_ID((short)12, "productId"),
    PRODUCT_KEY((short)13, "productKey"),
    /**
     * 
     * @see EProductType
     */
    PRODUCT_TYPE((short)14, "productType"),
    AMOUNT((short)15, "amount"),
    N_COIN_PAID((short)16, "nCoinPaid"),
    REF_ID((short)17, "refId"),
    /**
     * 
     * @see EPromotionType
     */
    PROMOTION_TYPE((short)18, "promotionType"),
    PROMOTION_RATE((short)19, "promotionRate"),
    N_COIN_PROMOTION((short)20, "nCoinPromotion"),
    LOCAL_CAMPAIGN((short)21, "localCampaign"),
    STATUS((short)22, "status"),
    DATA((short)23, "data"),
    PARTNER_ID((short)24, "partnerId"),
    PARTNER_STATUS((short)25, "partnerStatus"),
    PURCHASED_DATE((short)26, "purchasedDate"),
    COMPLETED_DATE((short)27, "completedDate");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // INVOICE_ID
          return INVOICE_ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // USER_NAME
          return USER_NAME;
        case 4: // USER_IP
          return USER_IP;
        case 5: // USER_GROUP
          return USER_GROUP;
        case 6: // SOURCE_NAME
          return SOURCE_NAME;
        case 7: // MARKETING_CAMPAIGN
          return MARKETING_CAMPAIGN;
        case 8: // APP_PACKAGE_ID
          return APP_PACKAGE_ID;
        case 9: // APP_PLATFORM
          return APP_PLATFORM;
        case 10: // N_COIN_BEFORE
          return N_COIN_BEFORE;
        case 11: // USER_RETENTION
          return USER_RETENTION;
        case 12: // PRODUCT_ID
          return PRODUCT_ID;
        case 13: // PRODUCT_KEY
          return PRODUCT_KEY;
        case 14: // PRODUCT_TYPE
          return PRODUCT_TYPE;
        case 15: // AMOUNT
          return AMOUNT;
        case 16: // N_COIN_PAID
          return N_COIN_PAID;
        case 17: // REF_ID
          return REF_ID;
        case 18: // PROMOTION_TYPE
          return PROMOTION_TYPE;
        case 19: // PROMOTION_RATE
          return PROMOTION_RATE;
        case 20: // N_COIN_PROMOTION
          return N_COIN_PROMOTION;
        case 21: // LOCAL_CAMPAIGN
          return LOCAL_CAMPAIGN;
        case 22: // STATUS
          return STATUS;
        case 23: // DATA
          return DATA;
        case 24: // PARTNER_ID
          return PARTNER_ID;
        case 25: // PARTNER_STATUS
          return PARTNER_STATUS;
        case 26: // PURCHASED_DATE
          return PURCHASED_DATE;
        case 27: // COMPLETED_DATE
          return COMPLETED_DATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INVOICEID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __NCOINBEFORE_ISSET_ID = 2;
  private static final int __USERRETENTION_ISSET_ID = 3;
  private static final int __PRODUCTID_ISSET_ID = 4;
  private static final int __AMOUNT_ISSET_ID = 5;
  private static final int __NCOINPAID_ISSET_ID = 6;
  private static final int __REFID_ISSET_ID = 7;
  private static final int __PROMOTIONRATE_ISSET_ID = 8;
  private static final int __NCOINPROMOTION_ISSET_ID = 9;
  private static final int __STATUS_ISSET_ID = 10;
  private static final int __PARTNERSTATUS_ISSET_ID = 11;
  private static final int __PURCHASEDDATE_ISSET_ID = 12;
  private static final int __COMPLETEDDATE_ISSET_ID = 13;
  private BitSet __isset_bit_vector = new BitSet(14);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.INVOICE_ID, new org.apache.thrift.meta_data.FieldMetaData("invoiceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_IP, new org.apache.thrift.meta_data.FieldMetaData("userIp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_GROUP, new org.apache.thrift.meta_data.FieldMetaData("userGroup", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.bliss.service.thrift.EUserGroup.class)));
    tmpMap.put(_Fields.SOURCE_NAME, new org.apache.thrift.meta_data.FieldMetaData("sourceName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MARKETING_CAMPAIGN, new org.apache.thrift.meta_data.FieldMetaData("marketingCampaign", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_PACKAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("appPackageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("appPlatform", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.N_COIN_BEFORE, new org.apache.thrift.meta_data.FieldMetaData("nCoinBefore", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_RETENTION, new org.apache.thrift.meta_data.FieldMetaData("userRetention", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_KEY, new org.apache.thrift.meta_data.FieldMetaData("productKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("productType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, EProductType.class)));
    tmpMap.put(_Fields.AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("amount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.N_COIN_PAID, new org.apache.thrift.meta_data.FieldMetaData("nCoinPaid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REF_ID, new org.apache.thrift.meta_data.FieldMetaData("refId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROMOTION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("promotionType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, EPromotionType.class)));
    tmpMap.put(_Fields.PROMOTION_RATE, new org.apache.thrift.meta_data.FieldMetaData("promotionRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.N_COIN_PROMOTION, new org.apache.thrift.meta_data.FieldMetaData("nCoinPromotion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCAL_CAMPAIGN, new org.apache.thrift.meta_data.FieldMetaData("localCampaign", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.DATA, new org.apache.thrift.meta_data.FieldMetaData("data", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_ID, new org.apache.thrift.meta_data.FieldMetaData("partnerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_STATUS, new org.apache.thrift.meta_data.FieldMetaData("partnerStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.PURCHASED_DATE, new org.apache.thrift.meta_data.FieldMetaData("purchasedDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COMPLETED_DATE, new org.apache.thrift.meta_data.FieldMetaData("completedDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TInvoiceValue.class, metaDataMap);
  }

  public TInvoiceValue() {
  }

  public TInvoiceValue(
    long invoiceId,
    long userId,
    String userName,
    String userIp,
    com.bliss.service.thrift.EUserGroup userGroup,
    String sourceName,
    String marketingCampaign,
    String appPackageId,
    String appPlatform,
    long nCoinBefore,
    long userRetention,
    int productId,
    String productKey,
    EProductType productType,
    int amount,
    long nCoinPaid,
    long refId,
    EPromotionType promotionType,
    int promotionRate,
    long nCoinPromotion,
    String localCampaign,
    byte status,
    String data,
    String partnerId,
    byte partnerStatus,
    long purchasedDate,
    long completedDate)
  {
    this();
    this.invoiceId = invoiceId;
    setInvoiceIdIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.userName = userName;
    this.userIp = userIp;
    this.userGroup = userGroup;
    this.sourceName = sourceName;
    this.marketingCampaign = marketingCampaign;
    this.appPackageId = appPackageId;
    this.appPlatform = appPlatform;
    this.nCoinBefore = nCoinBefore;
    setNCoinBeforeIsSet(true);
    this.userRetention = userRetention;
    setUserRetentionIsSet(true);
    this.productId = productId;
    setProductIdIsSet(true);
    this.productKey = productKey;
    this.productType = productType;
    this.amount = amount;
    setAmountIsSet(true);
    this.nCoinPaid = nCoinPaid;
    setNCoinPaidIsSet(true);
    this.refId = refId;
    setRefIdIsSet(true);
    this.promotionType = promotionType;
    this.promotionRate = promotionRate;
    setPromotionRateIsSet(true);
    this.nCoinPromotion = nCoinPromotion;
    setNCoinPromotionIsSet(true);
    this.localCampaign = localCampaign;
    this.status = status;
    setStatusIsSet(true);
    this.data = data;
    this.partnerId = partnerId;
    this.partnerStatus = partnerStatus;
    setPartnerStatusIsSet(true);
    this.purchasedDate = purchasedDate;
    setPurchasedDateIsSet(true);
    this.completedDate = completedDate;
    setCompletedDateIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TInvoiceValue(TInvoiceValue other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.invoiceId = other.invoiceId;
    this.userId = other.userId;
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetUserIp()) {
      this.userIp = other.userIp;
    }
    if (other.isSetUserGroup()) {
      this.userGroup = other.userGroup;
    }
    if (other.isSetSourceName()) {
      this.sourceName = other.sourceName;
    }
    if (other.isSetMarketingCampaign()) {
      this.marketingCampaign = other.marketingCampaign;
    }
    if (other.isSetAppPackageId()) {
      this.appPackageId = other.appPackageId;
    }
    if (other.isSetAppPlatform()) {
      this.appPlatform = other.appPlatform;
    }
    this.nCoinBefore = other.nCoinBefore;
    this.userRetention = other.userRetention;
    this.productId = other.productId;
    if (other.isSetProductKey()) {
      this.productKey = other.productKey;
    }
    if (other.isSetProductType()) {
      this.productType = other.productType;
    }
    this.amount = other.amount;
    this.nCoinPaid = other.nCoinPaid;
    this.refId = other.refId;
    if (other.isSetPromotionType()) {
      this.promotionType = other.promotionType;
    }
    this.promotionRate = other.promotionRate;
    this.nCoinPromotion = other.nCoinPromotion;
    if (other.isSetLocalCampaign()) {
      this.localCampaign = other.localCampaign;
    }
    this.status = other.status;
    if (other.isSetData()) {
      this.data = other.data;
    }
    if (other.isSetPartnerId()) {
      this.partnerId = other.partnerId;
    }
    this.partnerStatus = other.partnerStatus;
    this.purchasedDate = other.purchasedDate;
    this.completedDate = other.completedDate;
  }

  public TInvoiceValue deepCopy() {
    return new TInvoiceValue(this);
  }

  @Override
  public void clear() {
    setInvoiceIdIsSet(false);
    this.invoiceId = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    this.userName = null;
    this.userIp = null;
    this.userGroup = null;
    this.sourceName = null;
    this.marketingCampaign = null;
    this.appPackageId = null;
    this.appPlatform = null;
    setNCoinBeforeIsSet(false);
    this.nCoinBefore = 0;
    setUserRetentionIsSet(false);
    this.userRetention = 0;
    setProductIdIsSet(false);
    this.productId = 0;
    this.productKey = null;
    this.productType = null;
    setAmountIsSet(false);
    this.amount = 0;
    setNCoinPaidIsSet(false);
    this.nCoinPaid = 0;
    setRefIdIsSet(false);
    this.refId = 0;
    this.promotionType = null;
    setPromotionRateIsSet(false);
    this.promotionRate = 0;
    setNCoinPromotionIsSet(false);
    this.nCoinPromotion = 0;
    this.localCampaign = null;
    setStatusIsSet(false);
    this.status = 0;
    this.data = null;
    this.partnerId = null;
    setPartnerStatusIsSet(false);
    this.partnerStatus = 0;
    setPurchasedDateIsSet(false);
    this.purchasedDate = 0;
    setCompletedDateIsSet(false);
    this.completedDate = 0;
  }

  public long getInvoiceId() {
    return this.invoiceId;
  }

  public TInvoiceValue setInvoiceId(long invoiceId) {
    this.invoiceId = invoiceId;
    setInvoiceIdIsSet(true);
    return this;
  }

  public void unsetInvoiceId() {
    __isset_bit_vector.clear(__INVOICEID_ISSET_ID);
  }

  /** Returns true if field invoiceId is set (has been assigned a value) and false otherwise */
  public boolean isSetInvoiceId() {
    return __isset_bit_vector.get(__INVOICEID_ISSET_ID);
  }

  public void setInvoiceIdIsSet(boolean value) {
    __isset_bit_vector.set(__INVOICEID_ISSET_ID, value);
  }

  public long getUserId() {
    return this.userId;
  }

  public TInvoiceValue setUserId(long userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bit_vector.clear(__USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return __isset_bit_vector.get(__USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bit_vector.set(__USERID_ISSET_ID, value);
  }

  public String getUserName() {
    return this.userName;
  }

  public TInvoiceValue setUserName(String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public String getUserIp() {
    return this.userIp;
  }

  public TInvoiceValue setUserIp(String userIp) {
    this.userIp = userIp;
    return this;
  }

  public void unsetUserIp() {
    this.userIp = null;
  }

  /** Returns true if field userIp is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIp() {
    return this.userIp != null;
  }

  public void setUserIpIsSet(boolean value) {
    if (!value) {
      this.userIp = null;
    }
  }

  /**
   * 
   * @see com.bliss.service.thrift.EUserGroup
   */
  public com.bliss.service.thrift.EUserGroup getUserGroup() {
    return this.userGroup;
  }

  /**
   * 
   * @see com.bliss.service.thrift.EUserGroup
   */
  public TInvoiceValue setUserGroup(com.bliss.service.thrift.EUserGroup userGroup) {
    this.userGroup = userGroup;
    return this;
  }

  public void unsetUserGroup() {
    this.userGroup = null;
  }

  /** Returns true if field userGroup is set (has been assigned a value) and false otherwise */
  public boolean isSetUserGroup() {
    return this.userGroup != null;
  }

  public void setUserGroupIsSet(boolean value) {
    if (!value) {
      this.userGroup = null;
    }
  }

  public String getSourceName() {
    return this.sourceName;
  }

  public TInvoiceValue setSourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

  public void unsetSourceName() {
    this.sourceName = null;
  }

  /** Returns true if field sourceName is set (has been assigned a value) and false otherwise */
  public boolean isSetSourceName() {
    return this.sourceName != null;
  }

  public void setSourceNameIsSet(boolean value) {
    if (!value) {
      this.sourceName = null;
    }
  }

  public String getMarketingCampaign() {
    return this.marketingCampaign;
  }

  public TInvoiceValue setMarketingCampaign(String marketingCampaign) {
    this.marketingCampaign = marketingCampaign;
    return this;
  }

  public void unsetMarketingCampaign() {
    this.marketingCampaign = null;
  }

  /** Returns true if field marketingCampaign is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketingCampaign() {
    return this.marketingCampaign != null;
  }

  public void setMarketingCampaignIsSet(boolean value) {
    if (!value) {
      this.marketingCampaign = null;
    }
  }

  public String getAppPackageId() {
    return this.appPackageId;
  }

  public TInvoiceValue setAppPackageId(String appPackageId) {
    this.appPackageId = appPackageId;
    return this;
  }

  public void unsetAppPackageId() {
    this.appPackageId = null;
  }

  /** Returns true if field appPackageId is set (has been assigned a value) and false otherwise */
  public boolean isSetAppPackageId() {
    return this.appPackageId != null;
  }

  public void setAppPackageIdIsSet(boolean value) {
    if (!value) {
      this.appPackageId = null;
    }
  }

  public String getAppPlatform() {
    return this.appPlatform;
  }

  public TInvoiceValue setAppPlatform(String appPlatform) {
    this.appPlatform = appPlatform;
    return this;
  }

  public void unsetAppPlatform() {
    this.appPlatform = null;
  }

  /** Returns true if field appPlatform is set (has been assigned a value) and false otherwise */
  public boolean isSetAppPlatform() {
    return this.appPlatform != null;
  }

  public void setAppPlatformIsSet(boolean value) {
    if (!value) {
      this.appPlatform = null;
    }
  }

  public long getNCoinBefore() {
    return this.nCoinBefore;
  }

  public TInvoiceValue setNCoinBefore(long nCoinBefore) {
    this.nCoinBefore = nCoinBefore;
    setNCoinBeforeIsSet(true);
    return this;
  }

  public void unsetNCoinBefore() {
    __isset_bit_vector.clear(__NCOINBEFORE_ISSET_ID);
  }

  /** Returns true if field nCoinBefore is set (has been assigned a value) and false otherwise */
  public boolean isSetNCoinBefore() {
    return __isset_bit_vector.get(__NCOINBEFORE_ISSET_ID);
  }

  public void setNCoinBeforeIsSet(boolean value) {
    __isset_bit_vector.set(__NCOINBEFORE_ISSET_ID, value);
  }

  public long getUserRetention() {
    return this.userRetention;
  }

  public TInvoiceValue setUserRetention(long userRetention) {
    this.userRetention = userRetention;
    setUserRetentionIsSet(true);
    return this;
  }

  public void unsetUserRetention() {
    __isset_bit_vector.clear(__USERRETENTION_ISSET_ID);
  }

  /** Returns true if field userRetention is set (has been assigned a value) and false otherwise */
  public boolean isSetUserRetention() {
    return __isset_bit_vector.get(__USERRETENTION_ISSET_ID);
  }

  public void setUserRetentionIsSet(boolean value) {
    __isset_bit_vector.set(__USERRETENTION_ISSET_ID, value);
  }

  public int getProductId() {
    return this.productId;
  }

  public TInvoiceValue setProductId(int productId) {
    this.productId = productId;
    setProductIdIsSet(true);
    return this;
  }

  public void unsetProductId() {
    __isset_bit_vector.clear(__PRODUCTID_ISSET_ID);
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return __isset_bit_vector.get(__PRODUCTID_ISSET_ID);
  }

  public void setProductIdIsSet(boolean value) {
    __isset_bit_vector.set(__PRODUCTID_ISSET_ID, value);
  }

  public String getProductKey() {
    return this.productKey;
  }

  public TInvoiceValue setProductKey(String productKey) {
    this.productKey = productKey;
    return this;
  }

  public void unsetProductKey() {
    this.productKey = null;
  }

  /** Returns true if field productKey is set (has been assigned a value) and false otherwise */
  public boolean isSetProductKey() {
    return this.productKey != null;
  }

  public void setProductKeyIsSet(boolean value) {
    if (!value) {
      this.productKey = null;
    }
  }

  /**
   * 
   * @see EProductType
   */
  public EProductType getProductType() {
    return this.productType;
  }

  /**
   * 
   * @see EProductType
   */
  public TInvoiceValue setProductType(EProductType productType) {
    this.productType = productType;
    return this;
  }

  public void unsetProductType() {
    this.productType = null;
  }

  /** Returns true if field productType is set (has been assigned a value) and false otherwise */
  public boolean isSetProductType() {
    return this.productType != null;
  }

  public void setProductTypeIsSet(boolean value) {
    if (!value) {
      this.productType = null;
    }
  }

  public int getAmount() {
    return this.amount;
  }

  public TInvoiceValue setAmount(int amount) {
    this.amount = amount;
    setAmountIsSet(true);
    return this;
  }

  public void unsetAmount() {
    __isset_bit_vector.clear(__AMOUNT_ISSET_ID);
  }

  /** Returns true if field amount is set (has been assigned a value) and false otherwise */
  public boolean isSetAmount() {
    return __isset_bit_vector.get(__AMOUNT_ISSET_ID);
  }

  public void setAmountIsSet(boolean value) {
    __isset_bit_vector.set(__AMOUNT_ISSET_ID, value);
  }

  public long getNCoinPaid() {
    return this.nCoinPaid;
  }

  public TInvoiceValue setNCoinPaid(long nCoinPaid) {
    this.nCoinPaid = nCoinPaid;
    setNCoinPaidIsSet(true);
    return this;
  }

  public void unsetNCoinPaid() {
    __isset_bit_vector.clear(__NCOINPAID_ISSET_ID);
  }

  /** Returns true if field nCoinPaid is set (has been assigned a value) and false otherwise */
  public boolean isSetNCoinPaid() {
    return __isset_bit_vector.get(__NCOINPAID_ISSET_ID);
  }

  public void setNCoinPaidIsSet(boolean value) {
    __isset_bit_vector.set(__NCOINPAID_ISSET_ID, value);
  }

  public long getRefId() {
    return this.refId;
  }

  public TInvoiceValue setRefId(long refId) {
    this.refId = refId;
    setRefIdIsSet(true);
    return this;
  }

  public void unsetRefId() {
    __isset_bit_vector.clear(__REFID_ISSET_ID);
  }

  /** Returns true if field refId is set (has been assigned a value) and false otherwise */
  public boolean isSetRefId() {
    return __isset_bit_vector.get(__REFID_ISSET_ID);
  }

  public void setRefIdIsSet(boolean value) {
    __isset_bit_vector.set(__REFID_ISSET_ID, value);
  }

  /**
   * 
   * @see EPromotionType
   */
  public EPromotionType getPromotionType() {
    return this.promotionType;
  }

  /**
   * 
   * @see EPromotionType
   */
  public TInvoiceValue setPromotionType(EPromotionType promotionType) {
    this.promotionType = promotionType;
    return this;
  }

  public void unsetPromotionType() {
    this.promotionType = null;
  }

  /** Returns true if field promotionType is set (has been assigned a value) and false otherwise */
  public boolean isSetPromotionType() {
    return this.promotionType != null;
  }

  public void setPromotionTypeIsSet(boolean value) {
    if (!value) {
      this.promotionType = null;
    }
  }

  public int getPromotionRate() {
    return this.promotionRate;
  }

  public TInvoiceValue setPromotionRate(int promotionRate) {
    this.promotionRate = promotionRate;
    setPromotionRateIsSet(true);
    return this;
  }

  public void unsetPromotionRate() {
    __isset_bit_vector.clear(__PROMOTIONRATE_ISSET_ID);
  }

  /** Returns true if field promotionRate is set (has been assigned a value) and false otherwise */
  public boolean isSetPromotionRate() {
    return __isset_bit_vector.get(__PROMOTIONRATE_ISSET_ID);
  }

  public void setPromotionRateIsSet(boolean value) {
    __isset_bit_vector.set(__PROMOTIONRATE_ISSET_ID, value);
  }

  public long getNCoinPromotion() {
    return this.nCoinPromotion;
  }

  public TInvoiceValue setNCoinPromotion(long nCoinPromotion) {
    this.nCoinPromotion = nCoinPromotion;
    setNCoinPromotionIsSet(true);
    return this;
  }

  public void unsetNCoinPromotion() {
    __isset_bit_vector.clear(__NCOINPROMOTION_ISSET_ID);
  }

  /** Returns true if field nCoinPromotion is set (has been assigned a value) and false otherwise */
  public boolean isSetNCoinPromotion() {
    return __isset_bit_vector.get(__NCOINPROMOTION_ISSET_ID);
  }

  public void setNCoinPromotionIsSet(boolean value) {
    __isset_bit_vector.set(__NCOINPROMOTION_ISSET_ID, value);
  }

  public String getLocalCampaign() {
    return this.localCampaign;
  }

  public TInvoiceValue setLocalCampaign(String localCampaign) {
    this.localCampaign = localCampaign;
    return this;
  }

  public void unsetLocalCampaign() {
    this.localCampaign = null;
  }

  /** Returns true if field localCampaign is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalCampaign() {
    return this.localCampaign != null;
  }

  public void setLocalCampaignIsSet(boolean value) {
    if (!value) {
      this.localCampaign = null;
    }
  }

  public byte getStatus() {
    return this.status;
  }

  public TInvoiceValue setStatus(byte status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bit_vector.clear(__STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return __isset_bit_vector.get(__STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bit_vector.set(__STATUS_ISSET_ID, value);
  }

  public String getData() {
    return this.data;
  }

  public TInvoiceValue setData(String data) {
    this.data = data;
    return this;
  }

  public void unsetData() {
    this.data = null;
  }

  /** Returns true if field data is set (has been assigned a value) and false otherwise */
  public boolean isSetData() {
    return this.data != null;
  }

  public void setDataIsSet(boolean value) {
    if (!value) {
      this.data = null;
    }
  }

  public String getPartnerId() {
    return this.partnerId;
  }

  public TInvoiceValue setPartnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

  public void unsetPartnerId() {
    this.partnerId = null;
  }

  /** Returns true if field partnerId is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerId() {
    return this.partnerId != null;
  }

  public void setPartnerIdIsSet(boolean value) {
    if (!value) {
      this.partnerId = null;
    }
  }

  public byte getPartnerStatus() {
    return this.partnerStatus;
  }

  public TInvoiceValue setPartnerStatus(byte partnerStatus) {
    this.partnerStatus = partnerStatus;
    setPartnerStatusIsSet(true);
    return this;
  }

  public void unsetPartnerStatus() {
    __isset_bit_vector.clear(__PARTNERSTATUS_ISSET_ID);
  }

  /** Returns true if field partnerStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerStatus() {
    return __isset_bit_vector.get(__PARTNERSTATUS_ISSET_ID);
  }

  public void setPartnerStatusIsSet(boolean value) {
    __isset_bit_vector.set(__PARTNERSTATUS_ISSET_ID, value);
  }

  public long getPurchasedDate() {
    return this.purchasedDate;
  }

  public TInvoiceValue setPurchasedDate(long purchasedDate) {
    this.purchasedDate = purchasedDate;
    setPurchasedDateIsSet(true);
    return this;
  }

  public void unsetPurchasedDate() {
    __isset_bit_vector.clear(__PURCHASEDDATE_ISSET_ID);
  }

  /** Returns true if field purchasedDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPurchasedDate() {
    return __isset_bit_vector.get(__PURCHASEDDATE_ISSET_ID);
  }

  public void setPurchasedDateIsSet(boolean value) {
    __isset_bit_vector.set(__PURCHASEDDATE_ISSET_ID, value);
  }

  public long getCompletedDate() {
    return this.completedDate;
  }

  public TInvoiceValue setCompletedDate(long completedDate) {
    this.completedDate = completedDate;
    setCompletedDateIsSet(true);
    return this;
  }

  public void unsetCompletedDate() {
    __isset_bit_vector.clear(__COMPLETEDDATE_ISSET_ID);
  }

  /** Returns true if field completedDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCompletedDate() {
    return __isset_bit_vector.get(__COMPLETEDDATE_ISSET_ID);
  }

  public void setCompletedDateIsSet(boolean value) {
    __isset_bit_vector.set(__COMPLETEDDATE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case INVOICE_ID:
      if (value == null) {
        unsetInvoiceId();
      } else {
        setInvoiceId((Long)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Long)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case USER_IP:
      if (value == null) {
        unsetUserIp();
      } else {
        setUserIp((String)value);
      }
      break;

    case USER_GROUP:
      if (value == null) {
        unsetUserGroup();
      } else {
        setUserGroup((com.bliss.service.thrift.EUserGroup)value);
      }
      break;

    case SOURCE_NAME:
      if (value == null) {
        unsetSourceName();
      } else {
        setSourceName((String)value);
      }
      break;

    case MARKETING_CAMPAIGN:
      if (value == null) {
        unsetMarketingCampaign();
      } else {
        setMarketingCampaign((String)value);
      }
      break;

    case APP_PACKAGE_ID:
      if (value == null) {
        unsetAppPackageId();
      } else {
        setAppPackageId((String)value);
      }
      break;

    case APP_PLATFORM:
      if (value == null) {
        unsetAppPlatform();
      } else {
        setAppPlatform((String)value);
      }
      break;

    case N_COIN_BEFORE:
      if (value == null) {
        unsetNCoinBefore();
      } else {
        setNCoinBefore((Long)value);
      }
      break;

    case USER_RETENTION:
      if (value == null) {
        unsetUserRetention();
      } else {
        setUserRetention((Long)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((Integer)value);
      }
      break;

    case PRODUCT_KEY:
      if (value == null) {
        unsetProductKey();
      } else {
        setProductKey((String)value);
      }
      break;

    case PRODUCT_TYPE:
      if (value == null) {
        unsetProductType();
      } else {
        setProductType((EProductType)value);
      }
      break;

    case AMOUNT:
      if (value == null) {
        unsetAmount();
      } else {
        setAmount((Integer)value);
      }
      break;

    case N_COIN_PAID:
      if (value == null) {
        unsetNCoinPaid();
      } else {
        setNCoinPaid((Long)value);
      }
      break;

    case REF_ID:
      if (value == null) {
        unsetRefId();
      } else {
        setRefId((Long)value);
      }
      break;

    case PROMOTION_TYPE:
      if (value == null) {
        unsetPromotionType();
      } else {
        setPromotionType((EPromotionType)value);
      }
      break;

    case PROMOTION_RATE:
      if (value == null) {
        unsetPromotionRate();
      } else {
        setPromotionRate((Integer)value);
      }
      break;

    case N_COIN_PROMOTION:
      if (value == null) {
        unsetNCoinPromotion();
      } else {
        setNCoinPromotion((Long)value);
      }
      break;

    case LOCAL_CAMPAIGN:
      if (value == null) {
        unsetLocalCampaign();
      } else {
        setLocalCampaign((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Byte)value);
      }
      break;

    case DATA:
      if (value == null) {
        unsetData();
      } else {
        setData((String)value);
      }
      break;

    case PARTNER_ID:
      if (value == null) {
        unsetPartnerId();
      } else {
        setPartnerId((String)value);
      }
      break;

    case PARTNER_STATUS:
      if (value == null) {
        unsetPartnerStatus();
      } else {
        setPartnerStatus((Byte)value);
      }
      break;

    case PURCHASED_DATE:
      if (value == null) {
        unsetPurchasedDate();
      } else {
        setPurchasedDate((Long)value);
      }
      break;

    case COMPLETED_DATE:
      if (value == null) {
        unsetCompletedDate();
      } else {
        setCompletedDate((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case INVOICE_ID:
      return Long.valueOf(getInvoiceId());

    case USER_ID:
      return Long.valueOf(getUserId());

    case USER_NAME:
      return getUserName();

    case USER_IP:
      return getUserIp();

    case USER_GROUP:
      return getUserGroup();

    case SOURCE_NAME:
      return getSourceName();

    case MARKETING_CAMPAIGN:
      return getMarketingCampaign();

    case APP_PACKAGE_ID:
      return getAppPackageId();

    case APP_PLATFORM:
      return getAppPlatform();

    case N_COIN_BEFORE:
      return Long.valueOf(getNCoinBefore());

    case USER_RETENTION:
      return Long.valueOf(getUserRetention());

    case PRODUCT_ID:
      return Integer.valueOf(getProductId());

    case PRODUCT_KEY:
      return getProductKey();

    case PRODUCT_TYPE:
      return getProductType();

    case AMOUNT:
      return Integer.valueOf(getAmount());

    case N_COIN_PAID:
      return Long.valueOf(getNCoinPaid());

    case REF_ID:
      return Long.valueOf(getRefId());

    case PROMOTION_TYPE:
      return getPromotionType();

    case PROMOTION_RATE:
      return Integer.valueOf(getPromotionRate());

    case N_COIN_PROMOTION:
      return Long.valueOf(getNCoinPromotion());

    case LOCAL_CAMPAIGN:
      return getLocalCampaign();

    case STATUS:
      return Byte.valueOf(getStatus());

    case DATA:
      return getData();

    case PARTNER_ID:
      return getPartnerId();

    case PARTNER_STATUS:
      return Byte.valueOf(getPartnerStatus());

    case PURCHASED_DATE:
      return Long.valueOf(getPurchasedDate());

    case COMPLETED_DATE:
      return Long.valueOf(getCompletedDate());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case INVOICE_ID:
      return isSetInvoiceId();
    case USER_ID:
      return isSetUserId();
    case USER_NAME:
      return isSetUserName();
    case USER_IP:
      return isSetUserIp();
    case USER_GROUP:
      return isSetUserGroup();
    case SOURCE_NAME:
      return isSetSourceName();
    case MARKETING_CAMPAIGN:
      return isSetMarketingCampaign();
    case APP_PACKAGE_ID:
      return isSetAppPackageId();
    case APP_PLATFORM:
      return isSetAppPlatform();
    case N_COIN_BEFORE:
      return isSetNCoinBefore();
    case USER_RETENTION:
      return isSetUserRetention();
    case PRODUCT_ID:
      return isSetProductId();
    case PRODUCT_KEY:
      return isSetProductKey();
    case PRODUCT_TYPE:
      return isSetProductType();
    case AMOUNT:
      return isSetAmount();
    case N_COIN_PAID:
      return isSetNCoinPaid();
    case REF_ID:
      return isSetRefId();
    case PROMOTION_TYPE:
      return isSetPromotionType();
    case PROMOTION_RATE:
      return isSetPromotionRate();
    case N_COIN_PROMOTION:
      return isSetNCoinPromotion();
    case LOCAL_CAMPAIGN:
      return isSetLocalCampaign();
    case STATUS:
      return isSetStatus();
    case DATA:
      return isSetData();
    case PARTNER_ID:
      return isSetPartnerId();
    case PARTNER_STATUS:
      return isSetPartnerStatus();
    case PURCHASED_DATE:
      return isSetPurchasedDate();
    case COMPLETED_DATE:
      return isSetCompletedDate();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TInvoiceValue)
      return this.equals((TInvoiceValue)that);
    return false;
  }

  public boolean equals(TInvoiceValue that) {
    if (that == null)
      return false;

    boolean this_present_invoiceId = true;
    boolean that_present_invoiceId = true;
    if (this_present_invoiceId || that_present_invoiceId) {
      if (!(this_present_invoiceId && that_present_invoiceId))
        return false;
      if (this.invoiceId != that.invoiceId)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_userIp = true && this.isSetUserIp();
    boolean that_present_userIp = true && that.isSetUserIp();
    if (this_present_userIp || that_present_userIp) {
      if (!(this_present_userIp && that_present_userIp))
        return false;
      if (!this.userIp.equals(that.userIp))
        return false;
    }

    boolean this_present_userGroup = true && this.isSetUserGroup();
    boolean that_present_userGroup = true && that.isSetUserGroup();
    if (this_present_userGroup || that_present_userGroup) {
      if (!(this_present_userGroup && that_present_userGroup))
        return false;
      if (!this.userGroup.equals(that.userGroup))
        return false;
    }

    boolean this_present_sourceName = true && this.isSetSourceName();
    boolean that_present_sourceName = true && that.isSetSourceName();
    if (this_present_sourceName || that_present_sourceName) {
      if (!(this_present_sourceName && that_present_sourceName))
        return false;
      if (!this.sourceName.equals(that.sourceName))
        return false;
    }

    boolean this_present_marketingCampaign = true && this.isSetMarketingCampaign();
    boolean that_present_marketingCampaign = true && that.isSetMarketingCampaign();
    if (this_present_marketingCampaign || that_present_marketingCampaign) {
      if (!(this_present_marketingCampaign && that_present_marketingCampaign))
        return false;
      if (!this.marketingCampaign.equals(that.marketingCampaign))
        return false;
    }

    boolean this_present_appPackageId = true && this.isSetAppPackageId();
    boolean that_present_appPackageId = true && that.isSetAppPackageId();
    if (this_present_appPackageId || that_present_appPackageId) {
      if (!(this_present_appPackageId && that_present_appPackageId))
        return false;
      if (!this.appPackageId.equals(that.appPackageId))
        return false;
    }

    boolean this_present_appPlatform = true && this.isSetAppPlatform();
    boolean that_present_appPlatform = true && that.isSetAppPlatform();
    if (this_present_appPlatform || that_present_appPlatform) {
      if (!(this_present_appPlatform && that_present_appPlatform))
        return false;
      if (!this.appPlatform.equals(that.appPlatform))
        return false;
    }

    boolean this_present_nCoinBefore = true;
    boolean that_present_nCoinBefore = true;
    if (this_present_nCoinBefore || that_present_nCoinBefore) {
      if (!(this_present_nCoinBefore && that_present_nCoinBefore))
        return false;
      if (this.nCoinBefore != that.nCoinBefore)
        return false;
    }

    boolean this_present_userRetention = true;
    boolean that_present_userRetention = true;
    if (this_present_userRetention || that_present_userRetention) {
      if (!(this_present_userRetention && that_present_userRetention))
        return false;
      if (this.userRetention != that.userRetention)
        return false;
    }

    boolean this_present_productId = true;
    boolean that_present_productId = true;
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (this.productId != that.productId)
        return false;
    }

    boolean this_present_productKey = true && this.isSetProductKey();
    boolean that_present_productKey = true && that.isSetProductKey();
    if (this_present_productKey || that_present_productKey) {
      if (!(this_present_productKey && that_present_productKey))
        return false;
      if (!this.productKey.equals(that.productKey))
        return false;
    }

    boolean this_present_productType = true && this.isSetProductType();
    boolean that_present_productType = true && that.isSetProductType();
    if (this_present_productType || that_present_productType) {
      if (!(this_present_productType && that_present_productType))
        return false;
      if (!this.productType.equals(that.productType))
        return false;
    }

    boolean this_present_amount = true;
    boolean that_present_amount = true;
    if (this_present_amount || that_present_amount) {
      if (!(this_present_amount && that_present_amount))
        return false;
      if (this.amount != that.amount)
        return false;
    }

    boolean this_present_nCoinPaid = true;
    boolean that_present_nCoinPaid = true;
    if (this_present_nCoinPaid || that_present_nCoinPaid) {
      if (!(this_present_nCoinPaid && that_present_nCoinPaid))
        return false;
      if (this.nCoinPaid != that.nCoinPaid)
        return false;
    }

    boolean this_present_refId = true;
    boolean that_present_refId = true;
    if (this_present_refId || that_present_refId) {
      if (!(this_present_refId && that_present_refId))
        return false;
      if (this.refId != that.refId)
        return false;
    }

    boolean this_present_promotionType = true && this.isSetPromotionType();
    boolean that_present_promotionType = true && that.isSetPromotionType();
    if (this_present_promotionType || that_present_promotionType) {
      if (!(this_present_promotionType && that_present_promotionType))
        return false;
      if (!this.promotionType.equals(that.promotionType))
        return false;
    }

    boolean this_present_promotionRate = true;
    boolean that_present_promotionRate = true;
    if (this_present_promotionRate || that_present_promotionRate) {
      if (!(this_present_promotionRate && that_present_promotionRate))
        return false;
      if (this.promotionRate != that.promotionRate)
        return false;
    }

    boolean this_present_nCoinPromotion = true;
    boolean that_present_nCoinPromotion = true;
    if (this_present_nCoinPromotion || that_present_nCoinPromotion) {
      if (!(this_present_nCoinPromotion && that_present_nCoinPromotion))
        return false;
      if (this.nCoinPromotion != that.nCoinPromotion)
        return false;
    }

    boolean this_present_localCampaign = true && this.isSetLocalCampaign();
    boolean that_present_localCampaign = true && that.isSetLocalCampaign();
    if (this_present_localCampaign || that_present_localCampaign) {
      if (!(this_present_localCampaign && that_present_localCampaign))
        return false;
      if (!this.localCampaign.equals(that.localCampaign))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_data = true && this.isSetData();
    boolean that_present_data = true && that.isSetData();
    if (this_present_data || that_present_data) {
      if (!(this_present_data && that_present_data))
        return false;
      if (!this.data.equals(that.data))
        return false;
    }

    boolean this_present_partnerId = true && this.isSetPartnerId();
    boolean that_present_partnerId = true && that.isSetPartnerId();
    if (this_present_partnerId || that_present_partnerId) {
      if (!(this_present_partnerId && that_present_partnerId))
        return false;
      if (!this.partnerId.equals(that.partnerId))
        return false;
    }

    boolean this_present_partnerStatus = true;
    boolean that_present_partnerStatus = true;
    if (this_present_partnerStatus || that_present_partnerStatus) {
      if (!(this_present_partnerStatus && that_present_partnerStatus))
        return false;
      if (this.partnerStatus != that.partnerStatus)
        return false;
    }

    boolean this_present_purchasedDate = true;
    boolean that_present_purchasedDate = true;
    if (this_present_purchasedDate || that_present_purchasedDate) {
      if (!(this_present_purchasedDate && that_present_purchasedDate))
        return false;
      if (this.purchasedDate != that.purchasedDate)
        return false;
    }

    boolean this_present_completedDate = true;
    boolean that_present_completedDate = true;
    if (this_present_completedDate || that_present_completedDate) {
      if (!(this_present_completedDate && that_present_completedDate))
        return false;
      if (this.completedDate != that.completedDate)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(TInvoiceValue other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TInvoiceValue typedOther = (TInvoiceValue)other;

    lastComparison = Boolean.valueOf(isSetInvoiceId()).compareTo(typedOther.isSetInvoiceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvoiceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invoiceId, typedOther.invoiceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(typedOther.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, typedOther.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIp()).compareTo(typedOther.isSetUserIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIp, typedOther.userIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserGroup()).compareTo(typedOther.isSetUserGroup());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserGroup()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userGroup, typedOther.userGroup);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSourceName()).compareTo(typedOther.isSetSourceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceName, typedOther.sourceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketingCampaign()).compareTo(typedOther.isSetMarketingCampaign());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketingCampaign()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketingCampaign, typedOther.marketingCampaign);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppPackageId()).compareTo(typedOther.isSetAppPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppPackageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appPackageId, typedOther.appPackageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppPlatform()).compareTo(typedOther.isSetAppPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appPlatform, typedOther.appPlatform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNCoinBefore()).compareTo(typedOther.isSetNCoinBefore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNCoinBefore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nCoinBefore, typedOther.nCoinBefore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserRetention()).compareTo(typedOther.isSetUserRetention());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserRetention()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userRetention, typedOther.userRetention);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(typedOther.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, typedOther.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductKey()).compareTo(typedOther.isSetProductKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productKey, typedOther.productKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductType()).compareTo(typedOther.isSetProductType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productType, typedOther.productType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.amount, typedOther.amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNCoinPaid()).compareTo(typedOther.isSetNCoinPaid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNCoinPaid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nCoinPaid, typedOther.nCoinPaid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefId()).compareTo(typedOther.isSetRefId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refId, typedOther.refId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPromotionType()).compareTo(typedOther.isSetPromotionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPromotionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.promotionType, typedOther.promotionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPromotionRate()).compareTo(typedOther.isSetPromotionRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPromotionRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.promotionRate, typedOther.promotionRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNCoinPromotion()).compareTo(typedOther.isSetNCoinPromotion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNCoinPromotion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nCoinPromotion, typedOther.nCoinPromotion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalCampaign()).compareTo(typedOther.isSetLocalCampaign());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalCampaign()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localCampaign, typedOther.localCampaign);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetData()).compareTo(typedOther.isSetData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.data, typedOther.data);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerId()).compareTo(typedOther.isSetPartnerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerId, typedOther.partnerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerStatus()).compareTo(typedOther.isSetPartnerStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerStatus, typedOther.partnerStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPurchasedDate()).compareTo(typedOther.isSetPurchasedDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPurchasedDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.purchasedDate, typedOther.purchasedDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompletedDate()).compareTo(typedOther.isSetCompletedDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompletedDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.completedDate, typedOther.completedDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TInvoiceValue(");
    boolean first = true;

    sb.append("invoiceId:");
    sb.append(this.invoiceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIp:");
    if (this.userIp == null) {
      sb.append("null");
    } else {
      sb.append(this.userIp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userGroup:");
    if (this.userGroup == null) {
      sb.append("null");
    } else {
      sb.append(this.userGroup);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sourceName:");
    if (this.sourceName == null) {
      sb.append("null");
    } else {
      sb.append(this.sourceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketingCampaign:");
    if (this.marketingCampaign == null) {
      sb.append("null");
    } else {
      sb.append(this.marketingCampaign);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appPackageId:");
    if (this.appPackageId == null) {
      sb.append("null");
    } else {
      sb.append(this.appPackageId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appPlatform:");
    if (this.appPlatform == null) {
      sb.append("null");
    } else {
      sb.append(this.appPlatform);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nCoinBefore:");
    sb.append(this.nCoinBefore);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userRetention:");
    sb.append(this.userRetention);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    sb.append(this.productId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productKey:");
    if (this.productKey == null) {
      sb.append("null");
    } else {
      sb.append(this.productKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productType:");
    if (this.productType == null) {
      sb.append("null");
    } else {
      sb.append(this.productType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("amount:");
    sb.append(this.amount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nCoinPaid:");
    sb.append(this.nCoinPaid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("refId:");
    sb.append(this.refId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("promotionType:");
    if (this.promotionType == null) {
      sb.append("null");
    } else {
      sb.append(this.promotionType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("promotionRate:");
    sb.append(this.promotionRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nCoinPromotion:");
    sb.append(this.nCoinPromotion);
    first = false;
    if (!first) sb.append(", ");
    sb.append("localCampaign:");
    if (this.localCampaign == null) {
      sb.append("null");
    } else {
      sb.append(this.localCampaign);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("data:");
    if (this.data == null) {
      sb.append("null");
    } else {
      sb.append(this.data);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerId:");
    if (this.partnerId == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerStatus:");
    sb.append(this.partnerStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("purchasedDate:");
    sb.append(this.purchasedDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("completedDate:");
    sb.append(this.completedDate);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TInvoiceValueStandardSchemeFactory implements SchemeFactory {
    public TInvoiceValueStandardScheme getScheme() {
      return new TInvoiceValueStandardScheme();
    }
  }

  private static class TInvoiceValueStandardScheme extends StandardScheme<TInvoiceValue> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TInvoiceValue struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // INVOICE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.invoiceId = iprot.readI64();
              struct.setInvoiceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.userId = iprot.readI64();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // USER_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userIp = iprot.readString();
              struct.setUserIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // USER_GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userGroup = com.bliss.service.thrift.EUserGroup.findByValue(iprot.readI32());
              struct.setUserGroupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SOURCE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sourceName = iprot.readString();
              struct.setSourceNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MARKETING_CAMPAIGN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.marketingCampaign = iprot.readString();
              struct.setMarketingCampaignIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // APP_PACKAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appPackageId = iprot.readString();
              struct.setAppPackageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // APP_PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appPlatform = iprot.readString();
              struct.setAppPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // N_COIN_BEFORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nCoinBefore = iprot.readI64();
              struct.setNCoinBeforeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // USER_RETENTION
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.userRetention = iprot.readI64();
              struct.setUserRetentionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productId = iprot.readI32();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PRODUCT_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productKey = iprot.readString();
              struct.setProductKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PRODUCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productType = EProductType.findByValue(iprot.readI32());
              struct.setProductTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.amount = iprot.readI32();
              struct.setAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // N_COIN_PAID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nCoinPaid = iprot.readI64();
              struct.setNCoinPaidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // REF_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.refId = iprot.readI64();
              struct.setRefIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PROMOTION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.promotionType = EPromotionType.findByValue(iprot.readI32());
              struct.setPromotionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PROMOTION_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.promotionRate = iprot.readI32();
              struct.setPromotionRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // N_COIN_PROMOTION
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nCoinPromotion = iprot.readI64();
              struct.setNCoinPromotionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // LOCAL_CAMPAIGN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.localCampaign = iprot.readString();
              struct.setLocalCampaignIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.status = iprot.readByte();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.data = iprot.readString();
              struct.setDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // PARTNER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerId = iprot.readString();
              struct.setPartnerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // PARTNER_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.partnerStatus = iprot.readByte();
              struct.setPartnerStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PURCHASED_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.purchasedDate = iprot.readI64();
              struct.setPurchasedDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // COMPLETED_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.completedDate = iprot.readI64();
              struct.setCompletedDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TInvoiceValue struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(INVOICE_ID_FIELD_DESC);
      oprot.writeI64(struct.invoiceId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI64(struct.userId);
      oprot.writeFieldEnd();
      if (struct.userName != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.userName);
        oprot.writeFieldEnd();
      }
      if (struct.userIp != null) {
        oprot.writeFieldBegin(USER_IP_FIELD_DESC);
        oprot.writeString(struct.userIp);
        oprot.writeFieldEnd();
      }
      if (struct.userGroup != null) {
        oprot.writeFieldBegin(USER_GROUP_FIELD_DESC);
        oprot.writeI32(struct.userGroup.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.sourceName != null) {
        oprot.writeFieldBegin(SOURCE_NAME_FIELD_DESC);
        oprot.writeString(struct.sourceName);
        oprot.writeFieldEnd();
      }
      if (struct.marketingCampaign != null) {
        oprot.writeFieldBegin(MARKETING_CAMPAIGN_FIELD_DESC);
        oprot.writeString(struct.marketingCampaign);
        oprot.writeFieldEnd();
      }
      if (struct.appPackageId != null) {
        oprot.writeFieldBegin(APP_PACKAGE_ID_FIELD_DESC);
        oprot.writeString(struct.appPackageId);
        oprot.writeFieldEnd();
      }
      if (struct.appPlatform != null) {
        oprot.writeFieldBegin(APP_PLATFORM_FIELD_DESC);
        oprot.writeString(struct.appPlatform);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(N_COIN_BEFORE_FIELD_DESC);
      oprot.writeI64(struct.nCoinBefore);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_RETENTION_FIELD_DESC);
      oprot.writeI64(struct.userRetention);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeI32(struct.productId);
      oprot.writeFieldEnd();
      if (struct.productKey != null) {
        oprot.writeFieldBegin(PRODUCT_KEY_FIELD_DESC);
        oprot.writeString(struct.productKey);
        oprot.writeFieldEnd();
      }
      if (struct.productType != null) {
        oprot.writeFieldBegin(PRODUCT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.productType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
      oprot.writeI32(struct.amount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(N_COIN_PAID_FIELD_DESC);
      oprot.writeI64(struct.nCoinPaid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REF_ID_FIELD_DESC);
      oprot.writeI64(struct.refId);
      oprot.writeFieldEnd();
      if (struct.promotionType != null) {
        oprot.writeFieldBegin(PROMOTION_TYPE_FIELD_DESC);
        oprot.writeI32(struct.promotionType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PROMOTION_RATE_FIELD_DESC);
      oprot.writeI32(struct.promotionRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(N_COIN_PROMOTION_FIELD_DESC);
      oprot.writeI64(struct.nCoinPromotion);
      oprot.writeFieldEnd();
      if (struct.localCampaign != null) {
        oprot.writeFieldBegin(LOCAL_CAMPAIGN_FIELD_DESC);
        oprot.writeString(struct.localCampaign);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeByte(struct.status);
      oprot.writeFieldEnd();
      if (struct.data != null) {
        oprot.writeFieldBegin(DATA_FIELD_DESC);
        oprot.writeString(struct.data);
        oprot.writeFieldEnd();
      }
      if (struct.partnerId != null) {
        oprot.writeFieldBegin(PARTNER_ID_FIELD_DESC);
        oprot.writeString(struct.partnerId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PARTNER_STATUS_FIELD_DESC);
      oprot.writeByte(struct.partnerStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PURCHASED_DATE_FIELD_DESC);
      oprot.writeI64(struct.purchasedDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COMPLETED_DATE_FIELD_DESC);
      oprot.writeI64(struct.completedDate);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TInvoiceValueTupleSchemeFactory implements SchemeFactory {
    public TInvoiceValueTupleScheme getScheme() {
      return new TInvoiceValueTupleScheme();
    }
  }

  private static class TInvoiceValueTupleScheme extends TupleScheme<TInvoiceValue> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TInvoiceValue struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetInvoiceId()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetUserName()) {
        optionals.set(2);
      }
      if (struct.isSetUserIp()) {
        optionals.set(3);
      }
      if (struct.isSetUserGroup()) {
        optionals.set(4);
      }
      if (struct.isSetSourceName()) {
        optionals.set(5);
      }
      if (struct.isSetMarketingCampaign()) {
        optionals.set(6);
      }
      if (struct.isSetAppPackageId()) {
        optionals.set(7);
      }
      if (struct.isSetAppPlatform()) {
        optionals.set(8);
      }
      if (struct.isSetNCoinBefore()) {
        optionals.set(9);
      }
      if (struct.isSetUserRetention()) {
        optionals.set(10);
      }
      if (struct.isSetProductId()) {
        optionals.set(11);
      }
      if (struct.isSetProductKey()) {
        optionals.set(12);
      }
      if (struct.isSetProductType()) {
        optionals.set(13);
      }
      if (struct.isSetAmount()) {
        optionals.set(14);
      }
      if (struct.isSetNCoinPaid()) {
        optionals.set(15);
      }
      if (struct.isSetRefId()) {
        optionals.set(16);
      }
      if (struct.isSetPromotionType()) {
        optionals.set(17);
      }
      if (struct.isSetPromotionRate()) {
        optionals.set(18);
      }
      if (struct.isSetNCoinPromotion()) {
        optionals.set(19);
      }
      if (struct.isSetLocalCampaign()) {
        optionals.set(20);
      }
      if (struct.isSetStatus()) {
        optionals.set(21);
      }
      if (struct.isSetData()) {
        optionals.set(22);
      }
      if (struct.isSetPartnerId()) {
        optionals.set(23);
      }
      if (struct.isSetPartnerStatus()) {
        optionals.set(24);
      }
      if (struct.isSetPurchasedDate()) {
        optionals.set(25);
      }
      if (struct.isSetCompletedDate()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetInvoiceId()) {
        oprot.writeI64(struct.invoiceId);
      }
      if (struct.isSetUserId()) {
        oprot.writeI64(struct.userId);
      }
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetUserIp()) {
        oprot.writeString(struct.userIp);
      }
      if (struct.isSetUserGroup()) {
        oprot.writeI32(struct.userGroup.getValue());
      }
      if (struct.isSetSourceName()) {
        oprot.writeString(struct.sourceName);
      }
      if (struct.isSetMarketingCampaign()) {
        oprot.writeString(struct.marketingCampaign);
      }
      if (struct.isSetAppPackageId()) {
        oprot.writeString(struct.appPackageId);
      }
      if (struct.isSetAppPlatform()) {
        oprot.writeString(struct.appPlatform);
      }
      if (struct.isSetNCoinBefore()) {
        oprot.writeI64(struct.nCoinBefore);
      }
      if (struct.isSetUserRetention()) {
        oprot.writeI64(struct.userRetention);
      }
      if (struct.isSetProductId()) {
        oprot.writeI32(struct.productId);
      }
      if (struct.isSetProductKey()) {
        oprot.writeString(struct.productKey);
      }
      if (struct.isSetProductType()) {
        oprot.writeI32(struct.productType.getValue());
      }
      if (struct.isSetAmount()) {
        oprot.writeI32(struct.amount);
      }
      if (struct.isSetNCoinPaid()) {
        oprot.writeI64(struct.nCoinPaid);
      }
      if (struct.isSetRefId()) {
        oprot.writeI64(struct.refId);
      }
      if (struct.isSetPromotionType()) {
        oprot.writeI32(struct.promotionType.getValue());
      }
      if (struct.isSetPromotionRate()) {
        oprot.writeI32(struct.promotionRate);
      }
      if (struct.isSetNCoinPromotion()) {
        oprot.writeI64(struct.nCoinPromotion);
      }
      if (struct.isSetLocalCampaign()) {
        oprot.writeString(struct.localCampaign);
      }
      if (struct.isSetStatus()) {
        oprot.writeByte(struct.status);
      }
      if (struct.isSetData()) {
        oprot.writeString(struct.data);
      }
      if (struct.isSetPartnerId()) {
        oprot.writeString(struct.partnerId);
      }
      if (struct.isSetPartnerStatus()) {
        oprot.writeByte(struct.partnerStatus);
      }
      if (struct.isSetPurchasedDate()) {
        oprot.writeI64(struct.purchasedDate);
      }
      if (struct.isSetCompletedDate()) {
        oprot.writeI64(struct.completedDate);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TInvoiceValue struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.invoiceId = iprot.readI64();
        struct.setInvoiceIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI64();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.userIp = iprot.readString();
        struct.setUserIpIsSet(true);
      }
      if (incoming.get(4)) {
        struct.userGroup = com.bliss.service.thrift.EUserGroup.findByValue(iprot.readI32());
        struct.setUserGroupIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sourceName = iprot.readString();
        struct.setSourceNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.marketingCampaign = iprot.readString();
        struct.setMarketingCampaignIsSet(true);
      }
      if (incoming.get(7)) {
        struct.appPackageId = iprot.readString();
        struct.setAppPackageIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.appPlatform = iprot.readString();
        struct.setAppPlatformIsSet(true);
      }
      if (incoming.get(9)) {
        struct.nCoinBefore = iprot.readI64();
        struct.setNCoinBeforeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.userRetention = iprot.readI64();
        struct.setUserRetentionIsSet(true);
      }
      if (incoming.get(11)) {
        struct.productId = iprot.readI32();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.productKey = iprot.readString();
        struct.setProductKeyIsSet(true);
      }
      if (incoming.get(13)) {
        struct.productType = EProductType.findByValue(iprot.readI32());
        struct.setProductTypeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.amount = iprot.readI32();
        struct.setAmountIsSet(true);
      }
      if (incoming.get(15)) {
        struct.nCoinPaid = iprot.readI64();
        struct.setNCoinPaidIsSet(true);
      }
      if (incoming.get(16)) {
        struct.refId = iprot.readI64();
        struct.setRefIdIsSet(true);
      }
      if (incoming.get(17)) {
        struct.promotionType = EPromotionType.findByValue(iprot.readI32());
        struct.setPromotionTypeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.promotionRate = iprot.readI32();
        struct.setPromotionRateIsSet(true);
      }
      if (incoming.get(19)) {
        struct.nCoinPromotion = iprot.readI64();
        struct.setNCoinPromotionIsSet(true);
      }
      if (incoming.get(20)) {
        struct.localCampaign = iprot.readString();
        struct.setLocalCampaignIsSet(true);
      }
      if (incoming.get(21)) {
        struct.status = iprot.readByte();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(22)) {
        struct.data = iprot.readString();
        struct.setDataIsSet(true);
      }
      if (incoming.get(23)) {
        struct.partnerId = iprot.readString();
        struct.setPartnerIdIsSet(true);
      }
      if (incoming.get(24)) {
        struct.partnerStatus = iprot.readByte();
        struct.setPartnerStatusIsSet(true);
      }
      if (incoming.get(25)) {
        struct.purchasedDate = iprot.readI64();
        struct.setPurchasedDateIsSet(true);
      }
      if (incoming.get(26)) {
        struct.completedDate = iprot.readI64();
        struct.setCompletedDateIsSet(true);
      }
    }
  }

}

